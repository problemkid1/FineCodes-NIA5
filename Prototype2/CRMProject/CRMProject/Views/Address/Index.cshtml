@using CRMProject.Utilities
@model IEnumerable<CRMProject.Models.Address>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Address Index";
}

@* <!-- Display Success or Error Messages --> *@
@* @if (TempData["SuccessMessage"] != null) *@
@* { *@
@*     <div class="alert alert-success" role="alert"> *@
@*         @TempData["SuccessMessage"] *@
@*     </div> *@
@* } *@

@* @if (TempData["ErrorMessage"] != null) *@
@* { *@
@*     <div class="alert alert-danger" role="alert"> *@
@*         @TempData["ErrorMessage"] *@
@*     </div> *@
@* } *@

<!-- Display Success or Error Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mt-3 d-flex justify-content-between align-items-center" role="alert">
        <span>@TempData["SuccessMessage"]</span>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
            <i class="bi bi-x"></i>
        </button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show mt-3 d-flex justify-content-between align-items-center" role="alert">
        <span>@TempData["ErrorMessage"]</span>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
            <i class="bi bi-x"></i>
        </button>
    </div>
}

<!-- Custom styles for this template-->
<link href="~/theme/css/custom-colors.css" rel="stylesheet">

<div class="col-12">
    <div class="card">
        <div class="card-body">

            <div class="d-sm-flex align-items-center justify-content-between mb-4">
                <h2 class="h2 mb-0 text-gray-1400">Addresses</h2>
                <a asp-action="Create" class="btn btn-primary btn-lg ">
                    <i class="fas fa-plus"></i> Add Address
                </a>
            </div>

            <form asp-action="Index" method="get">
                <div class="form-horizontal">
                    <button class="btn btn-outline-primary @ViewData["Filtering"]" type="button" data-bs-toggle="collapse" id="filterToggle"
                            data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
                        Filter/Search @ViewData["numberFilters"]
                    </button><br />
                    <div class="collapse @ViewData["ShowFilter"]" id="collapseFilter">
                        <div class="card card-body bg-light">
                            <div class="row">

                                <!-- Filter by City -->
                                <div class="form-group col-md-4">
                                    <label class="control-label">Filter by City:</label>
                                    @Html.TextBox("AddressCity", null, new { @class = "form-control", placeholder = "Enter city" })
                                    <span class="text-danger">@ViewData["AddressCityCount"]</span>
                                </div>

                                <!-- Filter by Province -->
                                <div class="form-group col-md-4">
                                    <label class="control-label">Filter by Province:</label>
                                    @Html.DropDownList("Province",
                                             EnumHelper.GetEnumSelectList<CRMProject.Models.Province>(),
                                             "All Provinces",
                                             new { @class = "form-control" })
                                    <span class="text-danger">@ViewData["ProvinceCount"]</span>
                                </div>

                                <!-- Filter by Postal Code -->
                                <div class="form-group col-md-4">
                                    <label class="control-label">Filter by Postal Code:</label>
                                    @Html.TextBox("PostalCode", null, new { @class = "form-control", placeholder = "Enter postal code" })
                                    <span class="text-danger">@ViewData["PostalCodeCount"]</span>
                                </div>

                                <!-- Filter Actions -->
                                <div class="form-group col-md-4 align-self-end">
                                    <button type="submit" name="actionButton"
                                            class="btn btn-outline-primary @(string.IsNullOrEmpty(ViewData["numberFilters"]?.ToString()) ? "btn-outline-primary" : "btn-danger")">
                                        Filter @ViewData["numberFilters"]
                                    </button>
                                    <a asp-action="Index" class="btn btn-outline-primary">Clear</a>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </form>

            <div class="card">
                <!-- /.card-header -->
                <div class="card-body">
                    <table id="example1" class="table table-bordered table-striped">
                        <thead class="table-light">
                            <tr>
                                <th>@Html.DisplayNameFor(model => model.Member)</th>
                                <th>@Html.DisplayNameFor(model => model.Summary)</th>
                                <th>@Html.DisplayNameFor(model => model.AddressCity)</th>
                                <th>@Html.DisplayNameFor(model => model.Province)</th>
                                <th>@Html.DisplayNameFor(model => model.PostalCode)</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.Member.MemberName)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Summary)</td>
                                    <td>@Html.DisplayFor(modelItem => item.AddressCity)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Province)</td>
                                    <td>@Html.DisplayFor(modelItem => item.PostalCode)</td>
                                    <td>
                                        <div class="btn-group" style="align-self:center; padding-left: 16%;">
                                            <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-md btn-outline-primary " role="button" aria-disabled="false"
                                               data-bs-toggle="tooltip" title="Edit @ViewData["ControllerFriendlyName"]">
                                                <i class="bi bi-pencil-square"></i>
                                            </a>

                                            <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-md btn-outline-primary"
                                               role="button" data-bs-toggle="tooltip" title="Details @ViewData["ControllerFriendlyName"]">
                                                <i class="bi bi-search"></i>
                                            </a>

                                            <a asp-action="Delete" asp-route-id="@item.ID" class="btn btn-md btn-outline-primary " role="button" aria-disabled="false"
                                               data-bs-toggle="tooltip" title="Delete @ViewData["ControllerFriendlyName"]">
                                                <i class="bi bi-archive-fill"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>
}