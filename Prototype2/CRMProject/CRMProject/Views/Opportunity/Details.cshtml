@model CRMProject.Models.Opportunity

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Details - " + Model?.OpportunityName;
}

<!-- Display Success or Error Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mt-3 d-flex justify-content-between align-items-center" role="alert">
        <span>@TempData["SuccessMessage"]</span>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
            <i class="bi bi-x"></i>
        </button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show mt-3 d-flex justify-content-between align-items-center" role="alert">
        <span>@TempData["ErrorMessage"]</span>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
            <i class="bi bi-x"></i>
        </button>
    </div>
}


<!-- FontAwesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />

<!-- Compact Definition List Styling -->
<link href="~/customs/css/style.css" rel="stylesheet">

@* <link href="~/theme/css/custom-colors.css" rel="stylesheet"> *@

<div class="col-12">
    <div class="card">
        <div class="card-body">
            <h2>Details - @Html.DisplayFor(model => model.OpportunityName)</h2>
            <hr />

            <!-- Custom DL styling -->
            <style>
                .compact-dl dt, .compact-dl dd {
                    margin-bottom: 0.5rem;
                }

                .compact-dl dd {
                    background-color: #f8f9fa;
                    padding: 0.5rem;
                    border-radius: 0.25rem;
                }
            </style>

            <dl class="row compact-dl">
                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.OpportunityName)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.OpportunityName)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.OpportunityStatus)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.OpportunityStatus)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.OpportunityPriority)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.OpportunityPriority)</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.OpportunityAction)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.OpportunityAction)</dd>

                <dt class="col-sm-2">Contact</dt>
                <dd class="col-sm-10">

                    @if (Model.OpportunityContacts?.Any() == true && Model.OpportunityContacts.Any())

                    {
                        var primaryContact = Model.OpportunityContacts.FirstOrDefault();
                        if (primaryContact != null)
                        {
                            <span>@primaryContact.Contact.ContactType</span>
                        }
                    }
                    else
                    {
                        <span>No contacts available</span>
                    }
                </dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.OpportunityLastContactDate)</dt>
                <dd class="col-sm-10">@Html.DisplayFor(model => model.OpportunityLastContactDate, "{0:yyyy-MM-dd}")</dd>

                <dt class="col-sm-2">@Html.DisplayNameFor(model => model.OpportunityInteractions)</dt>
                <dd class="col-sm-10">
                    <textarea class="form-control bg-light" readonly>@Model.OpportunityInteractions</textarea>
                </dd>
            </dl>


            @* <div class="col-md-3">
                <div class="row">
                    <dt class="col-5">Primary Contact</dt>
                    <dd class="col-7">
                @if (Model.OpportunityContacts != null && Model.OpportunityContacts.Any())
                {
                    var primaryContact = Model.OpportunityContacts.FirstOrDefault();
                    if (primaryContact != null)

                    {
                        var primaryContact = Model.OpportunityContacts.FirstOrDefault();
                        if (primaryContact != null)
                        {
                            <span>@primaryContact.Contact.ContactType</span>
                        }
                    }
                    else
                    {
                        <span>No contacts assigned</span>
                    }
                </div>

            </div> *@
            <div id="contactForm" class="mt-3" style="display: none;">
                @await Html.PartialAsync("_OpportunityContacts", new CRMProject.Models.Contact())
            </div>
            @if (User.IsInRole("Admin"))
            {
                <div class="mt-4">
                    <button class="btn btn-primary" onclick="showContactForm()">Add Contact</button>
                </div>
            }
            <div class="mt-4">

                <h4>Associated Contacts</h4>
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead class="table-light">
                            <tr>
                                <th>Name</th>
                                <th>Title/Role</th>
                                <th>Phone</th>
                                <th>Email</th>
                                @if (User.IsInRole("Admin"))
                                {
                                    <th>Actions</th>
                                }
                            </tr>
                        </thead>
                        <tbody>

                            @if (Model.OpportunityContacts != null && Model.OpportunityContacts.Any())

                            {
                                @foreach (var opportunityContact in Model.OpportunityContacts)
                                {
                                    var contact = opportunityContact.Contact;
                                    <tr>
                                        <td>@contact.Summary</td>
                                        <td>@contact.ContactTitleRole</td>
                                        <td>@contact.ContactPhone</td>
                                        <td>@contact.ContactEmailAddress</td>

                                        @if (User.IsInRole("Admin"))
                                        {
                                            <td>
                                                <div class="btn-group">
                                                    <a asp-action="Edit" asp-controller="Contact" asp-route-ID="@contact.ID"
                                                       class="btn btn-md btn-outline-primary" role="button" aria-disabled="false"
                                                       data-bs-toggle="tooltip" title="Edit Contact">
                                                        <i class="bi bi-pencil-square"></i>
                                                    </a>
                                                    <a asp-action="RemoveContact" asp-controller="Opportunity" asp-route-contactID="@opportunityContact.ContactID" asp-route-opportunityID="@opportunityContact.OpportunityID"
                                                       class="btn btn-md btn-outline-primary" role="button" aria-disabled="false"
                                                       data-bs-toggle="tooltip" title="Remove Contact">
                                                        <i class="bi bi-trash"></i>
                                                    </a>
                                                    @* <a asp-action="Details" asp-controller="Contact" asp-route-ID="@contact.ID"
                                                   class="btn btn-md btn-outline-primary" role="button"
                                                   data-bs-toggle="tooltip" title="Details Contact">

                                                    <i class="bi bi-search"></i>
                                                </a> *@
                                                </div>
                                            </td>
                                        }
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="5" class="text-center">No contacts available</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            @if (User.IsInRole("Admin"))
            {
                <form method="post" action="@Url.Action("ConvertToMember", "Opportunity", new { opportunityId = Model.ID })">
                    <button type="submit" class="btn btn-primary">Convert to Member</button>
                </form>
            }

            <div class="form-group text-center mt-3">
                @if (Model?.ID != null && User.IsInRole("Admin"))

                {
                    <a class="btn btn-warning" asp-action="Edit" asp-route-id="@Model.ID">Edit Opportunity</a>
                }
                <a class="btn btn-secondary ml-2" asp-action="Index">Back to Opportunities</a>
            </div>
        </div>
    </div>
</div>




@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        function showContactForm() {
            document.getElementById('contactForm').style.display = 'block';
        }

        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>
}
