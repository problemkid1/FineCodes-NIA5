@{
    ViewData["Title"] = "CRM";
    var newMemberCount = ViewData["NewMemberCount"] ?? 0;
}

<!-- Custom styles for this template-->
<link href="~/customs/css/style.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="container-fluid">
    <!-- Page Heading with Edit Controls -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Dashboard</h1>
        <div class="dashboard-controls">
            <button id="editDashboardBtn" class="btn btn-primary">
                <i class="fas fa-edit mr-1"></i> Edit Dashboard
            </button>
            <div id="dashboardEditControls" style="display: none;">
                <button id="saveDashboardBtn" class="btn btn-success mr-2">
                    <i class="fas fa-save mr-1"></i> Save Changes
                </button>
                <button id="cancelEditBtn" class="btn btn-secondary">
                    <i class="fas fa-times mr-1"></i> Cancel
                </button>
            </div>
        </div>
    </div>


    <!-- Dashboard Content -->
    <div id="dashboardContent">
        <div class="row">
            <!-- Left Column: Stacked Cards -->
            <div class="col-md-3 d-flex flex-column">
                <div class="widget" data-widget-id="total-members">
                    <div class="widget-controls" style="display: none;">
                        <button class="btn btn-sm btn-danger widget-remove"><i class="fas fa-times"></i></button>
                    </div>
                    <a href="/Member" class="text-decoration-none mb-4 flex-grow-1">
                        <div class="card border-left-primary shadow h-100">
                            <div class="card-body">
                                <div class="row no-gutters align-items-center">
                                    <div class="col mr-2">
                                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-4">
                                            <h5>Total Members</h5>
                                        </div>
                                        <div class="h1 mb-0 font-weight-bold text-gray-1200">
                                            @ViewData["MemberCount"]
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </a>
                </div>

                <div class="widget" data-widget-id="industries">
                    <div class="widget-controls" style="display: none;">
                        <button class="btn btn-sm btn-danger widget-remove"><i class="fas fa-times"></i></button>
                    </div>
                    <a href="/Industry" class="text-decoration-none mb-0 flex-grow-1">
                        <div class="card border-left-success shadow h-100">
                            <div class="card-body">
                                <div class="row no-gutters align-items-center">
                                    <div class="col mr-2">
                                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-4">
                                            <h5>Industries</h5>
                                        </div>
                                        <div class="h1 mb-0 font-weight-bold text-gray-1200">
                                            @ViewData["IndustryCount"]
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </a>
                </div>
            </div>

            <div class="col-md-3 d-flex flex-column">
                <div class="widget" data-widget-id="cancellations">
                    <div class="widget-controls" style="display: none;">
                        <button class="btn btn-sm btn-danger widget-remove"><i class="fas fa-times"></i></button>
                    </div>
                    <a href="/Member?MemberStatus=Cancelled" class="text-decoration-none mb-4 flex-grow-1">
                        <div class="card border-left-primary shadow h-100">
                            <div class="card-body">
                                <div class="row no-gutters align-items-center">
                                    <div class="col mr-2">
                                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-4">
                                            <h5>Cancellations</h5>
                                        </div>
                                        <div class="h1 mb-0 font-weight-bold text-gray-1200">
                                            @ViewData["CancellationCount"]
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </a>
                </div>

                <div class="widget" data-widget-id="new-members">
                    <div class="widget-controls" style="display: none;">
                        <button class="btn btn-sm btn-danger widget-remove"><i class="fas fa-times"></i></button>
                    </div>
                    <a href="/Member" class="text-decoration-none mb-0 flex-grow-1">
                        <div class="card border-left-info shadow h-100">
                            <div class="card-body">
                                <div class="row no-gutters align-items-center">
                                    <div class="col mr-2">
                                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-4">
                                            <h5>New Members (@DateTime.Now.Year)</h5>
                                        </div>
                                        <div class="h1 mb-lg-1 font-weight-bold text-gray-1200">
                                            @newMemberCount
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </a>
                </div>
            </div>

            <!-- Right Column: Charts -->
            <div class="col-md-6 d-flex flex-column">
                <div class="widget" data-widget-id="municipality-chart">
                    <div class="widget-controls" style="display: none;">
                        <button class="btn btn-sm btn-danger widget-remove"><i class="fas fa-times"></i></button>
                    </div>
                    <div class="card shadow w-100">
                        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                            <h5 class="m-0 font-weight-bold text-primary">Member Breakdown by Municipality</h5>
                        </div>
                        <div class="card-body d-flex align-items-center">
                            <div class="chart-bar w-100">
                                <canvas id="municipalityBarChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-6 d-flex flex-column">
                <div class="widget" data-widget-id="membership-pie" style="display: none;">
                    <div class="widget-controls" style="display: none;">
                        <button class="btn btn-sm btn-danger widget-remove"><i class="fas fa-times"></i></button>
                    </div>
                    <div class="card shadow w-100 mb-3">
                        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                            <h5 class="m-0 font-weight-bold text-primary">Membership Overview</h5>
                        </div>
                        <div class="card-body d-flex align-items-center">
                            <div class="chart-pie w-100">
                                <canvas id="memberPieChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Widget Selector Menu (Hidden by default) -->
        <div id="widgetSelector" class="card shadow mt-4" style="display: none;">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Add Widgets</h6>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3 mb-3">
                        <button class="btn btn-outline-primary btn-block add-widget" data-widget-id="total-members">
                            <i class="fas fa-users mr-1"></i> Total Members
                        </button>
                    </div>
                    <div class="col-md-3 mb-3">
                        <button class="btn btn-outline-primary btn-block add-widget" data-widget-id="industries">
                            <i class="fas fa-industry mr-1"></i> Industries
                        </button>
                    </div>
                    <div class="col-md-3 mb-3">
                        <button class="btn btn-outline-primary btn-block add-widget" data-widget-id="cancellations">
                            <i class="fas fa-ban mr-1"></i> Cancellations
                        </button>
                    </div>
                    <div class="col-md-3 mb-3">
                        <button class="btn btn-outline-primary btn-block add-widget" data-widget-id="new-members">
                            <i class="fas fa-user-plus mr-1"></i> New Members
                        </button>
                    </div>
                    <div class="col-md-3 mb-3">
                        <button class="btn btn-outline-primary btn-block add-widget" data-widget-id="municipality-chart">
                            <i class="fas fa-chart-bar mr-1"></i> Municipality Chart
                        </button>
                    </div>
                    <div class="col-md-3 mb-3">
                        <button class="btn btn-outline-primary btn-block add-widget" data-widget-id="membership-pie">
                            <i class="fas fa-chart-pie mr-1"></i> Membership Pie
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<script>
    console.log("Municipality Labels:", @Html.Raw(Json.Serialize(ViewData["MunicipalityLabels"])));
    console.log("Municipality Data:", @Html.Raw(Json.Serialize(ViewData["MunicipalityData"])));

        document.addEventListener("DOMContentLoaded", function () {
        // Municipality Bar Chart
        var ctxBar = document.getElementById("municipalityBarChart").getContext("2d");
        var municipalityLabels = @Html.Raw(Json.Serialize(ViewData["MunicipalityLabels"] ?? new List<string>()));
        var municipalityData = @Html.Raw(Json.Serialize(ViewData["MunicipalityData"] ?? new List<int>()));

        new Chart(ctxBar, {
            type: 'bar',
            data: {
                labels: municipalityLabels,
                datasets: [{
                    label: "Members",
                    backgroundColor: "#4e73df",
                    hoverBackgroundColor: "#2e59d9",
                    borderColor: "#4e73df",
                    data: municipalityData
                }]
            },
            options: {
                maintainAspectRatio: false,
                scales: {
                    x: {
                        grid: { display: false }
                    },
                    y: {
                        beginAtZero: true,
                        ticks: {
                            precision: 0, // Ensures only whole numbers
                            stepSize: 1, // Forces increments of 1
                            callback: function(value, index, values) {
                                return Number(value).toLocaleString(); // Formats as whole number
                            }
                        }
                    }
                }
            }
        });

        // Initialize the pie chart (but don't render it if hidden)
        var pieChartInstance = null;
        function initPieChart() {
            if (pieChartInstance) return; // Don't initialize twice

            var ctxPie = document.getElementById("memberPieChart").getContext("2d");
            var goodStanding = @ViewData["GoodStandingCount"];
            var overduePayment = @ViewData["OverduePaymentCount"];
            var cancellations = @ViewData["CancellationCount"];

            pieChartInstance = new Chart(ctxPie, {
                type: 'doughnut',
                data: {
                    labels: ["Good Standing", "Overdue Payment", "Cancelled"],
                    datasets: [{
                        data: [goodStanding, overduePayment, cancellations],
                        backgroundColor: ['#36479B', '#933515', '#D9534F'],
                        hoverBackgroundColor: ['#4CA5C2', '#C66210', '#C82333']
                    }]
                },
                options: {
                    maintainAspectRatio: false,
                    cutout: '80%' // Note: cutoutPercentage is deprecated in Chart.js v3+
                }
            });
        }

        // Dashboard Edit Functionality
        const editDashboardBtn = document.getElementById('editDashboardBtn');
        const saveDashboardBtn = document.getElementById('saveDashboardBtn');
        const cancelEditBtn = document.getElementById('cancelEditBtn');
        const dashboardEditControls = document.getElementById('dashboardEditControls');
        const widgetSelector = document.getElementById('widgetSelector');
        const widgets = document.querySelectorAll('.widget');
        const widgetControls = document.querySelectorAll('.widget-controls');

        // Load saved dashboard configuration
        loadDashboardConfig();

        // Enter edit mode
        editDashboardBtn.addEventListener('click', function() {
            enterEditMode();
        });

        // Save changes
        saveDashboardBtn.addEventListener('click', function() {
            saveChanges();
        });

        // Cancel edit mode
        cancelEditBtn.addEventListener('click', function() {
            cancelEdit();
        });

        // Add event listeners for widget removal buttons
        document.querySelectorAll('.widget-remove').forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                e.stopPropagation();
                const widget = this.closest('.widget');
                widget.style.display = 'none';
            });
        });

        // Add event listeners for widget addition buttons
        document.querySelectorAll('.add-widget').forEach(button => {
            button.addEventListener('click', function() {
                const widgetId = this.getAttribute('data-widget-id');
                const widget = document.querySelector(`.widget[data-widget-id="${widgetId}"]`);
                if (widget) {
                    widget.style.display = '';

                    // Initialize pie chart if it's being shown
                    if (widgetId === 'membership-pie') {
                        setTimeout(initPieChart, 100); // Small delay to ensure DOM is ready
                    }
                }
            });
        });

        function enterEditMode() {
            // Show edit controls
            editDashboardBtn.style.display = 'none';
            dashboardEditControls.style.display = 'inline-block';
            widgetSelector.style.display = 'block';

            // Show widget controls
            widgetControls.forEach(control => {
                control.style.display = 'block';
            });

            // Add edit styling
            widgets.forEach(widget => {
                widget.classList.add('widget-edit-mode');
            });
        }

        function saveChanges() {
            // Hide edit controls
            exitEditMode();

            // Save configuration to localStorage
            saveDashboardConfig();

            // Show success notification
            alert('Dashboard configuration saved successfully!');
        }

        function cancelEdit() {
            // Hide edit controls
            exitEditMode();

            // Revert to saved configuration
            loadDashboardConfig();
        }

        function exitEditMode() {
            editDashboardBtn.style.display = 'inline-block';
            dashboardEditControls.style.display = 'none';
            widgetSelector.style.display = 'none';

            // Hide widget controls
            widgetControls.forEach(control => {
                control.style.display = 'none';
            });

            // Remove edit styling
            widgets.forEach(widget => {
                widget.classList.remove('widget-edit-mode');
            });
        }

        function saveDashboardConfig() {
            const config = {};
            widgets.forEach(widget => {
                const id = widget.getAttribute('data-widget-id');
                config[id] = widget.style.display !== 'none';
            });

            localStorage.setItem('crmDashboardConfig', JSON.stringify(config));
        }

        function loadDashboardConfig() {
            const savedConfig = localStorage.getItem('crmDashboardConfig');

            if (savedConfig) {
                const config = JSON.parse(savedConfig);

                // Apply saved configuration
                widgets.forEach(widget => {
                    const id = widget.getAttribute('data-widget-id');
                    if (config.hasOwnProperty(id)) {
                        widget.style.display = config[id] ? '' : 'none';

                        // Initialize pie chart if it's visible
                        if (id === 'membership-pie' && config[id]) {
                            setTimeout(initPieChart, 100);
                        }
                    }
                });
            } else {
                // Default configuration - hide pie chart initially
                const pieWidget = document.querySelector('.widget[data-widget-id="membership-pie"]');
                if (pieWidget) {
                    pieWidget.style.display = 'none';
                }

                // Initialize visible widgets
                widgets.forEach(widget => {
                    if (widget.style.display !== 'none' && widget.getAttribute('data-widget-id') === 'membership-pie') {
                        setTimeout(initPieChart, 100);
                    }
                });
            }
        }
    });

    
</script>















function applySplitLayout(config = null) {
            // Get the currently selected config if none is provided
            if (!config) {
                config = splitConfigChartsLeft.checked ? 'chartsLeft' : 'metricsLeft';
            }
            
            // Reset dashboard content
            document.getElementById('dashboardContent').innerHTML = '';
            
            // Create main row
            const mainRow = document.createElement('div');
            mainRow.className = 'row';
            
            // Create left and right columns based on configuration
            const leftCol = document.createElement('div');
            const rightCol = document.createElement('div');
            
            // Check which metric widgets are visible
            const metricWidgets = ['total-members', 'industries', 'cancellations', 'new-members'];
            const visibleMetricWidgets = metricWidgets.filter(id => {
                const widget = document.querySelector(`.widget[data-widget-id="${id}"]`);
                return widget && widget.style.display !== 'none';
            });
            
            // Check which chart widgets are visible
            const chartWidgets = ['municipality-chart', 'membership-pie'];
            const visibleChartWidgets = chartWidgets.filter(id => {
                const widget = document.querySelector(`.widget[data-widget-id="${id}"]`);
                return widget && widget.style.display !== 'none';
            });
            
            // Set up columns based on configuration
            if (config === 'metricsLeft') {
                setupMetricsColumn(leftCol, visibleMetricWidgets);
                setupChartsColumn(rightCol, visibleChartWidgets);
            } else {
                setupChartsColumn(leftCol, visibleChartWidgets);
                setupMetricsColumn(rightCol, visibleMetricWidgets);
            }
            
            // Add columns to row
            mainRow.appendChild(leftCol);
            mainRow.appendChild(rightCol);
            
            // Add row to dashboard
            document.getElementById('dashboardContent').appendChild(mainRow);
            
            // Recreate charts since we cloned the containers
            recreateCharts();
        }









        CSS for widget edit mode
        const style = document.createElement('style');
        style.textContent = `
            .widget-edit-mode {
                position: relative;
                transition: all 0.2s ease;
                outline: 2px dashed #ccc;
                outline-offset: -2px;
            }
            .widget-edit-mode:hover {
                outline: 2px dashed #4e73df;
                background-color: rgba(78, 115, 223, 0.05);
            }
            .widget-controls {
                position: absolute;
                top: 5px;
                right: 5px;
                z-index: 10;
            }
            .clearfix::after {
                content: "";
                clear: both;
                display: table;
            }
        `;
        document.head.appendChild(style);




