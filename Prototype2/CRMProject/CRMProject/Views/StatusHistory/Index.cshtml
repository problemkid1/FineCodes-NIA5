@using CRMProject.Utilities
@model IEnumerable<CRMProject.Models.StatusHistory>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "StatusHistory Index";
}

<!-- Display Success or Error Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}

<!-- Custom styles for this template-->
<link href="~/customs/css/style.css" rel="stylesheet">

<div class="col-12">
    <div class="card">
        <div class="card-body">
            <!-- Header Section -->
            <div class="d-sm-flex align-items-center justify-content-between mb-4">
                <h2 class="h2 mb-0 text-gray-1400">Member Status History</h2>
            </div>

            <form asp-action="Index" method="get">
                <div class="form-horizontal">
                    <button class="btn btn-outline-primary @ViewData["Filtering"]" type="button" data-bs-toggle="collapse" id="filterToggle"
                            data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
                        Filter/Search @ViewData["numberFilters"]
                    </button><br />
                    <div class="collapse @ViewData["ShowFilter"]" id="collapseFilter">
                        <div class="card card-body bg-light">
                            <div class="row">
                                <!-- Filter by Member Name -->
                                    <div class="form-group col-md-4">
                                        <label class="control-label">Filter by Member Name:</label>
                                        @Html.TextBox("SearchString", null, new { @class = "form-control", placeholder = "Enter name" })
                                    </div>

                                <!-- Filter by Status -->
                                <div class="form-group col-md-4">
                                    <label class="control-label">Filter by Member Status:</label>
                                    @Html.DropDownList("MemberStatus",
                                             EnumHelper.GetEnumSelectList<CRMProject.Models.MemberStatus>(),
                                            "All Statuses",
                                             new { @class = "form-control" })
                                </div>

                                @* <!-- Filter by Reason -->
                                <div class="form-group col-md-4">
                                    <label class="control-label">Filter by Reason:</label>
                                    @Html.TextBox("Reason", null, new { @class = "form-control", placeholder = "Enter reason" })
                                    <span class="text-danger">@ViewData["ReasonCount"]</span>
                                </div> *@

                                <!-- Filter by Notes -->
                                <div class="form-group col-md-4">
                                    <label class="control-label">Filter by Notes:</label>
                                    @Html.TextBox("Notes", null, new { @class = "form-control", placeholder = "Enter notes" })
                                </div><br />

                                <!-- Filter by Date Range -->
                                <div class="form-group col-md-4">
                                    <label class="control-label">Filter by Date:</label>
                                    <div class="d-flex">
                                        <input type="date" name="StartDate" value="@ViewData["StartDate"]" class="form-control" placeholder="Start Date" />
                                        <span class="mx-2">to</span>
                                        <input type="date" name="EndDate" value="@ViewData["EndDate"]" class="form-control" placeholder="End Date" />
                                    </div>

                                    <span class="text-danger">@ViewData["NotesCount"]</span>
                                </div>

                                <span class="text-danger">@ViewData["NotesCount"]</span>

                                <!-- Filter Actions -->
                                <div class="form-group col-md-4 align-self-end">
                                    <button type="submit" name="actionButton"
                                            class="btn btn-outline-primary @(string.IsNullOrEmpty(ViewData["numberFilters"]?.ToString()) ? "btn-outline-primary" : "btn-danger")">
                                        Filter @ViewData["numberFilters"]
                                    </button>
                                    <a asp-action="Index" class="btn btn-outline-primary">Clear</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>



            <div class="card">
                <!-- Table Section -->
                <div class="card-body">
                    <table id="example1" class="table table-bordered table-striped">
                        <thead class="table-light">
                            <tr>
                                <th class="d-none d-sm-table-cell">@Html.DisplayNameFor(model => model.Member.MemberName)</th>                                
                                <th class="d-none d-sm-table-cell">@Html.DisplayNameFor(model => model.Status)</th>
                                <th>@Html.DisplayNameFor(model => model.Reason)</th>
                                <th class="d-none d-sm-table-cell">@Html.DisplayNameFor(model => model.Notes)</th>
                                <th>@Html.DisplayNameFor(model => model.Date)</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (!Model.Any())
                            {
                                <tr>
                                    <td colspan="5" class="text-center">No records available.</td>
                                </tr>
                            }
                            else
                            {
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <!-- Member Name -->
                                        <td class="d-none d-sm-table-cell">
                                            @if (item.Member != null)
                                            {
                                                var memberName = item.Member.MemberName;
                                                var words = memberName.Split(' ');
                                                var shortName = words.Length > 3 ? string.Join(" ", words.Take(3)) : memberName;
                                                var fullName = memberName;

                                                <span>
                                                    @shortName
                                                    @if (words.Length > 3)
                                                    {
                                                        <span id="moreTextName@(item.ID)" style="display: none;"> @fullName.Substring(shortName.Length) </span>
                                                        <a href="javascript:void(0);" id="readMoreName@(item.ID)" onclick="toggleTextName(@item.ID)">... </a>
                                                    }
                                                </span>
                                            }
                                            else
                                            {
                                                <span>N/A</span>
                                            }
                                        </td>

                                        <!-- Status -->
                                        <td>@Html.DisplayFor(modelItem => item.Status)</td>

                                        <!-- Reason -->
                                        <td>
                                            @if (!string.IsNullOrEmpty(item.Reason))
                                            {
                                                var reason = item.Reason;
                                                var words = reason.Split(' ');
                                                var shortReason = words.Length > 3 ? string.Join(" ", words.Take(3)) : reason;
                                                var fullReason = reason;

                                                <span>
                                                    @shortReason
                                                    @if (words.Length > 3)
                                                    {
                                                        <span id="moreTextReason@(item.ID)" style="display: none;"> @fullReason.Substring(shortReason.Length) </span>
                                                        <a href="javascript:void(0);" id="readMoreReason@(item.ID)" onclick="toggleTextReason(@item.ID)">... </a>
                                                    }
                                                </span>
                                            }
                                        </td>

                                        <!-- Notes -->
                                        <td class="d-none d-sm-table-cell">
                                            @if (!string.IsNullOrEmpty(item.Notes))
                                            {
                                                var notes = item.Notes;
                                                var words = notes.Split(' ');
                                                var shortNotes = words.Length > 3 ? string.Join(" ", words.Take(3)) : notes;
                                                var fullNotes = notes;

                                                <span>
                                                    @shortNotes
                                                    @if (words.Length > 3)
                                                    {
                                                        <span id="moreTextNotes@(item.ID)" style="display: none;"> @fullNotes.Substring(shortNotes.Length) </span>
                                                        <a href="javascript:void(0);" id="readMoreNotes@(item.ID)" onclick="toggleTextNotes(@item.ID)">... </a>
                                                    }
                                                </span>
                                            }
                                        </td>
                                    

                                        <td>@Html.DisplayFor(modelItem => item.Date)</td>
                                        <td>
                                            <div class="btn-group">
                                                <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-md btn-outline-primary " role="button" aria-disabled="false"
                                                   data-bs-toggle="tooltip" title="Edit @ViewData["ControllerFriendlyName"]">
                                                    <i class="bi bi-pencil-square"></i>
                                                </a>
                                                <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-md btn-outline-primary"
                                                   role="button" data-bs-toggle="tooltip" title="Details @ViewData["ControllerFriendlyName"]">
                                                    <i class="bi bi-search"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    // Toggle for Member Name
    function toggleTextName(itemId) {
        var moreText = document.getElementById("moreTextName" + itemId);
        var readMore = document.getElementById("readMoreName" + itemId);

        // Toggle member name text
        if (moreText.style.display === "none") {
            moreText.style.display = "inline";
            readMore.innerHTML = " Read less";
        } else {
            moreText.style.display = "none";
            readMore.innerHTML = "... ";
        }
    }

    // Toggle for Reason
    function toggleTextReason(itemId) {
        var moreText = document.getElementById("moreTextReason" + itemId);
        var readMore = document.getElementById("readMoreReason" + itemId);

        // Toggle reason text
        if (moreText.style.display === "none") {
            moreText.style.display = "inline";
            readMore.innerHTML = " Read less";
        } else {
            moreText.style.display = "none";
            readMore.innerHTML = "... ";
        }
    }

    // Toggle for Notes
    function toggleTextNotes(itemId) {
        var moreText = document.getElementById("moreTextNotes" + itemId);
        var readMore = document.getElementById("readMoreNotes" + itemId);

        // Toggle notes text
        if (moreText.style.display === "none") {
            moreText.style.display = "inline";
            readMore.innerHTML = " Read less";
        } else {
            moreText.style.display = "none";
            readMore.innerHTML = "... ";
        }
    }
</script>

