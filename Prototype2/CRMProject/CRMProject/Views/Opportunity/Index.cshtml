@using CRMProject.Utilities
@model IEnumerable<CRMProject.Models.Opportunity>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Opportunity Index";
}

@* <!-- Display Success or Error Messages --> *@
@* @if (TempData["SuccessMessage"] != null) *@
@* { *@
@*     <div class="alert alert-success" role="alert"> *@
@*         @TempData["SuccessMessage"] *@
@*     </div> *@
@* } *@

@* @if (TempData["ErrorMessage"] != null) *@
@* { *@
@*     <div class="alert alert-danger" role="alert"> *@
@*         @TempData["ErrorMessage"] *@
@*     </div> *@
@* } *@

<!-- Display Success or Error Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mt-3 d-flex justify-content-between align-items-center" role="alert">
        <span>@TempData["SuccessMessage"]</span>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
            <i class="fa-solid fa-x"></i>
        </button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show mt-3 d-flex justify-content-between align-items-center" role="alert">
        <span>@TempData["ErrorMessage"]</span>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
            <i class="fa-solid fa-x"></i>
        </button>
    </div>
}

<!-- Custom styles for this template-->
@* <link href="~/customs/css/style.css" rel="stylesheet"> *@
<link href="~/theme/css/custom-colors.css" rel="stylesheet">

<div class="col-12">
    <div class="card">
        <div class="card-body">
            <!-- Header Section -->
            <div class="d-sm-flex align-items-center justify-content-between mb-4">
                <h2 class="h2 mb-0 text-gray-1400">Opportunities</h2>
                <a asp-action="Create" class="btn btn-primary btn-lg ">
                    <i class="fas fa-plus fs-4"></i> Add Opportunity
                </a>
            </div>

            <form asp-action="Index" method="get">
                <div class="form-horizontal">
                    <button class="btn btn-outline-primary @ViewData["Filtering"]" type="button" data-bs-toggle="collapse" id="filterToggle"
                            data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
                        Filter/Search @ViewData["numberFilters"]
                    </button><br />
                    <div class="collapse @ViewData["ShowFilter"]" id="collapseFilter">
                        <div class="card card-body bg-light">
                            <div class="row">
                                <!-- Filter by Opportunity Name -->
                                <div class="form-group col-md-4">
                                    <label class="control-label">Filter by Opportunity Name:</label>
                                    @Html.TextBox("OpportunityName", null, new { @class = "form-control", placeholder = "Enter opportunity name" })
                                </div>

                                <!-- Filter by Opportunity Status -->
                                <div class="form-group col-md-4">
                                    <label class="control-label">Filter by Opportunity Status:</label>
                                    @Html.DropDownList("OpportunityStatus",
                                             EnumHelper.GetEnumSelectList<CRMProject.Models.OpportunityStatus>(),
                                             "All Statuses",
                                             new { @class = "form-control" })
                                </div>

                                <!-- Filter by Opportunity Priority -->
                                <div class="form-group col-md-4">
                                    <label class="control-label">Filter by Opportunity Priority:</label>
                                    @Html.TextBox("OpportunityPriority", null, new { @class = "form-control", placeholder = "Enter priority" })
                                </div>

                                <!-- Filter Actions -->
                                <div class="form-group col-md-4 align-self-end">
                                    <button type="submit" name="actionButton"
                                            class="btn btn-outline-primary @(string.IsNullOrEmpty(ViewData["numberFilters"]?.ToString()) ? "btn-outline-primary" : "btn-danger")">
                                        Filter @ViewData["numberFilters"]
                                    </button>
                                    <a asp-action="Index" class="btn btn-outline-primary">Clear</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>

            <!-- Add this right after the form but before the table card -->
            <div class="mb-3">
                @if (!string.IsNullOrEmpty(ViewData["numberFilters"]?.ToString()))
                {
                    <div class="card">
                        <div class="card-header bg-light">
                            <h5 class="mb-0">Active Filters</h5>
                        </div>
                        <div class="card-body bg-light">
                            <div class="row">
                                @if (!string.IsNullOrEmpty(Context.Request.Query["OpportunityName"]))
                                {
                                    <div class="col-auto mb-3 me-3">
                                        <span class="badge bg-primary text-white p-3 fs-4 fw-bold">
                                            Opportunity Name: @Context.Request.Query["OpportunityName"]
                                            <a asp-action="Index"
                                               asp-route-OpportunityStatus="@Context.Request.Query["OpportunityStatus"]"
                                               asp-route-OpportunityPriority="@Context.Request.Query["OpportunityPriority"]"
                                               class="ms-2 text-white"><i class="fas fa-times-circle"></i></a>
                                        </span>
                                    </div>
                                }
                                @if (!string.IsNullOrEmpty(Context.Request.Query["OpportunityStatus"]))
                                {
                                    <div class="col-auto mb-3 me-3">
                                        <span class="badge bg-primary text-white p-3 fs-4 fw-bold">
                                            Status: @Context.Request.Query["OpportunityStatus"]
                                            <a asp-action="Index"
                                               asp-route-OpportunityName="@Context.Request.Query["OpportunityName"]"
                                               asp-route-OpportunityPriority="@Context.Request.Query["OpportunityPriority"]"
                                               class="ms-2 text-white"><i class="fas fa-times-circle"></i></a>
                                        </span>
                                    </div>
                                }
                                @if (!string.IsNullOrEmpty(Context.Request.Query["OpportunityPriority"]))
                                {
                                    <div class="col-auto mb-3 me-3">
                                        <span class="badge bg-primary text-white p-3 fs-4 fw-bold">
                                            Priority: @Context.Request.Query["OpportunityPriority"]
                                            <a asp-action="Index"
                                               asp-route-OpportunityName="@Context.Request.Query["OpportunityName"]"
                                               asp-route-OpportunityStatus="@Context.Request.Query["OpportunityStatus"]"
                                               class="ms-2 text-white"><i class="fas fa-times-circle"></i></a>
                                        </span>
                                    </div>
                                }
                            </div>
                            <div class="mt-4">
                                <a asp-action="Index" class="btn btn-danger fs-4 fw-bold px-4 py-2">Clear All Filters</a>
                            </div>
                        </div>
                    </div>
                }
            </div>



            <div class="card">
                <!-- Table Section -->
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="example1" class="table table-bordered table-striped">
                            <thead class="table-light">
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.OpportunityName)</th>
                                    <th>@Html.DisplayNameFor(model => model.OpportunityStatus)</th>
                                    <th>@Html.DisplayNameFor(model => model.OpportunityPriority)</th>
                                    <th>@Html.DisplayNameFor(model => model.First().OpportunityContacts)</th>
                                    <th>@Html.DisplayNameFor(model => model.OpportunityLastContactDate)</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @if (!string.IsNullOrEmpty(item.OpportunityName))
                                            {
                                                var memberName = item.OpportunityName;
                                                var words = memberName.Split(' ');
                                                var shortName = words.Length > 3 ? string.Join(" ", words.Take(3)) : memberName;
                                                var fullName = memberName;

                                                <span>
                                                    @shortName
                                                    @if (words.Length > 3)
                                                    {
                                                        <span id="moreTextName@(item.ID)" style="display: none;"> @fullName.Substring(shortName.Length) </span>
                                                        <a href="javascript:void(0);" id="readMoreName@(item.ID)" onclick="toggleTextName(@item.ID)">... </a>
                                                    }
                                                </span>
                                            }
                                        </td>
                                        <td>@Html.DisplayFor(modelItem => item.OpportunityStatus)</td>
                                       
                                        <td>@Html.DisplayFor(modelItem => item.OpportunityPriority)</td>
                                        @* <td class="d-none d-sm-table-cell">
                                            @if (item.OpportunityContacts != null && item.OpportunityContacts.Any())
                                                {
                                                var primaryContact = item.OpportunityContacts.FirstOrDefault();
                                                    if (primaryContact != null)
                                                    {
                                                        var contactSummary = primaryContact.Contact.Summary;
                                                        var words = contactSummary?.Split(' ');
                                                        var shortSummary = words?.Length > 3 ? string.Join(" ", words.Take(3)) : contactSummary;
                                                        var fullSummary = contactSummary;

                                                        <span>
                                                            @shortSummary
                                                            @if (words?.Length > 3)
                                                            {
                                                                <span id="moreTextContact@(item.ID) style="display: none;"> @fullSummary.Substring(shortSummary.Length) </span>
                                                                <a href="javascript:void(0);" id="readMoreContact@(item.ID)" onclick="toggleTextContact(@item.ID)">...Read More </a>
                                                            }
                                                        </span>
                                                    var contactCount = item.OpportunityContacts.Count;
                                                        if (contactCount > 1)
                                                        {
                                                            string contactList = "";
                                                        var contacts = item.OpportunityContacts.Skip(1).ToList();
                                                            foreach (var contact in contacts)
                                                            {
                                                                contactList += contact.Contact.Summary + "<br />";
                                                            }

                                                            // Create the collapsible link and content for additional contacts
                                                            <a data-bs-toggle="collapse" href="#collapseContact@(item.ID)" aria-expanded="false" aria-controls="collapseContact@(item.ID)">
                                                                <span class="badge bg-info">@contactCount</span>
                                                            </a>
                                                            <div class="collapse" id="collapseContact@(item.ID)">
                                                                @Html.Raw(contactList)
                                                            </div>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <span>N/A</span>
                                                    }
                                                }                                                
                                            </td> *@
                                        <td>
                                            @if (item.OpportunityContacts != null && item.OpportunityContacts.Any())
                                            {
                                                var contacts = item.OpportunityContacts.Select(oc => oc.Contact.Summary).ToList();
                                                var contactCount = contacts.Count;
                                                var collapseId = $"collapseContact{item.ID}";
                                                var fullContactSummaries = string.Join(", ", contacts); // Full contact summaries for export

                                                <!-- Hidden span to store full contact summaries for export -->
                                                <span class="export-contact-data" style="display:none;">@fullContactSummaries</span>

                                                <span>
                                                    <a href="javascript:void(0);" class="role-button" data-bs-toggle="collapse"
                                                       data-bs-target="#@collapseId" aria-expanded="false" aria-controls="@collapseId">
                                                        Contacts (@contactCount)
                                                        <i class="bi bi-chevron-down" id="arrowContact@(item.ID)"></i>  <!-- Down arrow icon -->
                                                    </a>
                                                    <div class="collapse mt-2" id="@collapseId" data-item-id="@item.ID">
                                                        <ul class="list-unstyled">
                                                            @foreach (var contact in contacts)
                                                            {
                                                                <li>@contact</li>
                                                            }
                                                        </ul>
                                                    </div>
                                                </span>
                                            }
                                            else
                                            {
                                                <span>N/A</span>
                                            }
                                        </td>


                                        <td>@Html.DisplayFor(modelItem => item.OpportunityLastContactDate)</td>
                                        
                                        <td>
                                            <div class="btn-group" style="float: none; ">
                                                <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-md btn-outline-primary " role="button" aria-disabled="false"
                                                   data-bs-toggle="tooltip" title="Edit @ViewData["ControllerFriendlyName"]">
                                                    <i class="bi bi-pencil-square"></i>
                                                </a>

                                                <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-md btn-outline-primary"
                                                   role="button" data-bs-toggle="tooltip" title="Details @ViewData["ControllerFriendlyName"]">
                                                    <i class="bi bi-search"></i>
                                                </a>

                                                <a asp-action="Delete" asp-route-id="@item.ID" class="btn btn-md btn-outline-primary " role="button" aria-disabled="false"
                                                   data-bs-toggle="tooltip" title="Delete @ViewData["ControllerFriendlyName"]">
                                                    <i class="bi bi-trash"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="~/js/site.js"></script>
    <script>
        $(document).ready(function() {
            $("#filterToggle").click(function() {
                $("#collapseFilter").collapse('toggle');
            });
        });
    </script>
    <script>
         function toggleTextName(itemId) {
            var moreText = document.getElementById("moreTextName" + itemId);
            var readMore = document.getElementById("readMoreName" + itemId);

            // Toggle member name text
            if (moreText.style.display === "none") {
                moreText.style.display = "inline";
                readMore.innerHTML = " Read less";
            } else {
                moreText.style.display = "none";
                readMore.innerHTML = "... ";
            }
        }

        <script>
             function toggleTextContact(itemId) {
                var moreText = document.getElementById("moreTextContact" + itemId);
                var readMore = document.getElementById("readMoreContact" + itemId);

                // Toggle contact name text
                if (moreText.style.display === "none") {
                    moreText.style.display = "inline";
                    readMore.innerHTML = " Read less";
                } else {
                    moreText.style.display = "none";
                    readMore.innerHTML = "... ";
                }
            }
    </script>
    }