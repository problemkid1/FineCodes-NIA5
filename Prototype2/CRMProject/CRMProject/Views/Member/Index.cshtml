@using CRMProject.Utilities
@model IEnumerable<CRMProject.Models.Member>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Member Index";
}

<!-- Display Success or Error Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}

<!-- Custom styles for this template-->
<link href="~/customs/css/style.css" rel="stylesheet">

<div class="col-12">
    <div class="card">
        <div class="card-body">

            <div class="d-sm-flex align-items-center justify-content-between mb-4">
                <h1 class="h1 mb-0 text-gray-1400">Members</h1>
                <a asp-action="Create" class="btn btn-primary btn-lg "  >
                    <i class="fas fa-plus"></i> Add Member
                </a>
            </div>
            <form asp-action="Index" method="get">
                <div class="form-horizontal">
                    <div class="row">
                        <!-- Filter by Status -->
                        <div class="form-group col-md-4">
                            <label class="control-label">Filter by Status:</label>
                            @Html.DropDownList("MemberStatus",
                                     EnumHelper.GetEnumSelectList<CRMProject.Models.MemberStatus>(),
                                     "All Statuses",
                                     new { @class = "form-control" })
                        </div>

                        <!-- Filter by Size -->
                        <div class="form-group col-md-4">
                            <label class="control-label">Filter by Size:</label>
                            @Html.TextBox("MemberSize", null, new { @class = "form-control", placeholder = "Enter size" })
                        </div>

                        <!-- Search by Member Name -->
                        <div class="form-group col-md-4">
                            <label class="control-label">Search by Member Name:</label>
                            @Html.TextBox("SearchString", null, new { @class = "form-control", placeholder = "Enter name" })
                        </div>

                        <!-- Filter Actions -->
                        <div class="form-group col-md-4 align-self-end">
                            <input type="submit" name="actionButton" value="Filter" class="btn btn-outline-primary" />
                            <a asp-action="Index" class="btn btn-outline-dark">Clear</a>
                        </div>
                    </div>
                </div>
            </form>

            <div class="card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="example1" class="table table-bordered table-striped">
                            <thead class="table-light">
                                <tr>
                                    <th></th>
                                    <th>@Html.DisplayNameFor(model => model.First().MemberName)</th>
                                    <th class="d-none d-sm-table-cell">@Html.DisplayNameFor(model => model.First().MemberSize)</th>
                                    <th class="d-none d-sm-table-cell">@Html.DisplayNameFor(model => model.First().MemberStatus)</th>
                                    <th class="d-none d-sm-table-cell">Membership Type</th>
                                    <th class="d-none d-sm-table-cell">Industry Name</th>
                                    <th class="d-none d-sm-table-cell">@Html.DisplayNameFor(model => model.First().MemberStartDate)</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (!Model.Any())
                                {
                                    <tr>
                                        <td colspan="6" class="text-center">No members available.</td>
                                    </tr>
                                }
                                else
                                {
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <!--
                                            <td style="width: 100%; height: 100px;">
                                                -->
                                            <td>
                                                @{
                                                    if (item.MemberThumbnail?.Content != null)
                                                    {
                                                        string imageBase64 = Convert.ToBase64String(item.MemberThumbnail.Content);
                                                        string imageSrc = string.Format("data:" + item.MemberThumbnail.MimeType + ";base64,{0}", imageBase64);
                                                        <img src="@imageSrc" alt="Profile Picture of @item?.Summary"
                                                             title="Profile Picture of @item?.Summary" class="img-fluid rounded img-fill" />
                                                    }
                                                }
                                            </td>


                                            <td>@Html.DisplayFor(modelItem => item.MemberName)</td>
                                            <td class="d-none d-sm-table-cell">@Html.DisplayFor(modelItem => item.MemberSize)</td>
                                            <td class="d-none d-sm-table-cell">@Html.DisplayFor(modelItem => item.MemberStatus)</td>

                                            <td class="d-none d-sm-table-cell">
                                                @{
                                                    int specCount = item.MemberMembershipTypes.Count;
                                                    if (specCount > 0)
                                                    {
                                                        string firstSpec = item.MemberMembershipTypes.FirstOrDefault().MembershipType.MembershipTypeName.ToString();
                                                        if (specCount > 1)
                                                        {
                                                            string specList = ""; // Html string of specialty names separated by <br /> tags
                                                            var s = item.MemberMembershipTypes.ToList();
                                                            for (int i = 1; i < specCount; i++) // Skip the first because we have it already
                                                            {
                                                                specList += s[i].MembershipType.MembershipTypeName.ToString() + " <br />";
                                                            }

                                                                // Ensure the id of the collapse element is unique
                                                            <a class="" role="button" data-bs-toggle="collapse" href="#collapseSpecialty@(item.ID)"
                                                               aria-expanded="false" aria-controls="collapseSpecialty@(item.ID)">
                                                                @firstSpec <span class="badge bg-info badge-count" id="badge@(item.ID)">@specCount</span>
                                                            </a>
                                                            <div class="collapse" id="collapseSpecialty@(item.ID)">
                                                                @Html.Raw(specList)
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            @firstSpec
                                                        }
                                                    }
                                                }

                                            </td>

                                            <td class="d-none d-sm-table-cell">
                                                @if (item.MemberIndustries.Any())
                                                {
                                                    @Html.DisplayFor(modelItem => item.MemberIndustries.First().Industry.IndustryName)
                                                }
                                                else
                                                {
                                                    <span>No Industry</span>
                                                }
                                            </td>

                                            <td class="d-none d-sm-table-cell">@Html.DisplayFor(modelItem => item.MemberStartDate)</td>
                                            <td>
                                              
                                                <div class="btn-group">
                                                    <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-md btn-outline-primary " role="button" aria-disabled="false"
                                                       
                                                       data-bs-toggle="tooltip" title="Edit @ViewData["ControllerFriendlyName"]">
                                                        <i class="bi bi-pencil-square"></i>
                                                    </a>

                                                    <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-md btn-outline-primary"
                                                       role="button" data-bs-toggle="tooltip" title="Details @ViewData["ControllerFriendlyName"]">
                                                        <i class="bi bi-search"></i>
                                                    </a>

                                                    <a asp-action="Archive" asp-route-id="@item.ID" class="btn btn-md btn-outline-primary " role="button" aria-disabled="false"
                                                       
                                                       data-bs-toggle="tooltip" title="Archive @ViewData["ControllerFriendlyName"]">
                                                        <i class="bi bi-archive-fill"></i>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Find all collapse elements
        document.querySelectorAll('[data-bs-toggle="collapse"]').forEach(function (element) {
            // Extract the target collapse ID from the "href" attribute
            var collapseId = element.getAttribute('href').replace('#', '');
            var collapseElement = document.getElementById(collapseId);

            // Find the badge associated with this element (assume the ID follows the badge + collapse ID pattern)
            var badgeElement = document.getElementById('badge' + collapseId.replace('collapseSpecialty', ''));

            // Ensure collapse element and badge are found
            if (collapseElement && badgeElement) {
                // When the collapse is shown, hide the badge
                collapseElement.addEventListener('show.bs.collapse', function () {
                    badgeElement.style.display = 'none';
                });

                // When the collapse is hidden, show the badge
                collapseElement.addEventListener('hide.bs.collapse', function () {
                    badgeElement.style.display = 'inline-block';
                });
            }
        });
    });
</script>

