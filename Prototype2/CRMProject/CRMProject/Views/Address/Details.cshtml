@model CRMProject.Models.Address

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Details - Address";
}

<!-- Display Success or Error Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mt-3 d-flex justify-content-between align-items-center" role="alert">
        <span>@TempData["SuccessMessage"]</span>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
            <i class="fa-solid fa-x"></i>
        </button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show mt-3 d-flex justify-content-between align-items-center" role="alert">
        <span>@TempData["ErrorMessage"]</span>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
            <i class="fa-solid fa-x"></i>
        </button>
    </div>
}


<!-- Custom styles for this template-->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

@* <link href="~/theme/css/custom-colors.css" rel="stylesheet"> *@
@* <link href="~/customs/css/style.css" rel="stylesheet"> *@

<div class="col-12">
    <div class="card">
        <div class="card-body">
            <h2>Address Details</h2>
            <hr />

            <!-- Compact Definition List Styling -->
            <style>
                .compact-dl dt, .compact-dl dd {
                    margin-bottom: 0.5rem;
                }

                .compact-dl dt {
                    padding-top: 0.5rem;
                }
            </style>

            <dl class="row compact-dl">
                <dt class="col-sm-2 col-md-2">@Html.DisplayNameFor(model => model.AddressLine1)</dt>
                <dd class="col-sm-10 col-md-9 bg-light p-2 rounded">@Html.DisplayFor(model => model.AddressLine1)</dd>

                <dt class="col-sm-2 col-md-2">@Html.DisplayNameFor(model => model.AddressLine2)</dt>
                <dd class="col-sm-10 col-md-9 bg-light p-2 rounded">
                    @if (!string.IsNullOrWhiteSpace(Model.AddressLine2))
                    {
                        @Html.DisplayFor(model => model.AddressLine2)
                    }
                    else
                    {
                        <span>N/A</span>
                    }
                </dd>

                <dt class="col-sm-2 col-md-2">@Html.DisplayNameFor(model => model.AddressCity)</dt>
                <dd class="col-sm-10 col-md-9 bg-light p-2 rounded">@Html.DisplayFor(model => model.AddressCity)</dd>

                <dt class="col-sm-2 col-md-2">@Html.DisplayNameFor(model => model.Province)</dt>
                <dd class="col-sm-10 col-md-9 bg-light p-2 rounded">@Html.DisplayFor(model => model.Province)</dd>

                <dt class="col-sm-2 col-md-2">@Html.DisplayNameFor(model => model.PostalCode)</dt>
                <dd class="col-sm-10 col-md-9 bg-light p-2 rounded">@Html.DisplayFor(model => model.PostalCode)</dd>

                <dt class="col-sm-2 col-md-2">@Html.DisplayNameFor(model => model.Member)</dt>
                <dd class="col-sm-10 col-md-9 bg-light p-2 rounded">
                    @if (Model.Member != null)
                    {
                        @Html.DisplayFor(model => model.Member.MemberName)
                    }
                    else
                    {
                        <span>N/A</span>
                    }
                </dd>
            </dl>

            <div class="form-group text-center mt-3">
                @if (Model?.ID != null)
                {
                    <a class="btn btn-warning" asp-action="Edit" asp-route-id="@Model.ID">Edit Address</a>
                }
                <a class="btn btn-secondary ml-2" asp-controller="Member" asp-action="Details" asp-route-id="@Model.MemberID">
                    Back to @Model.Member?.MemberName ?? "Member"
                </a>
            </div>
        </div>
    </div>
</div>
