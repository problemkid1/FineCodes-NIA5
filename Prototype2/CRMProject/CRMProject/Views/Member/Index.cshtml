@using CRMProject.Utilities
@model IEnumerable<CRMProject.Models.Member>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Member Index";
}

<!-- Display Success or Error Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mt-3 d-flex justify-content-between align-items-center" role="alert">
        <span>@TempData["SuccessMessage"]</span>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
            <i class="fa-solid fa-x"></i>
        </button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show mt-3 d-flex justify-content-between align-items-center" role="alert">
        <span>@TempData["ErrorMessage"]</span>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
            <i class="fa-solid fa-x"></i>
        </button>
    </div>
}

@if (TempData["Feedback"] != null)
{
    <div class="alert alert-info alert-dismissible fade show mt-3 d-flex justify-content-between align-items-center" role="alert">
        <span>@Html.Raw(TempData["Feedback"])</span>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
            <i class="fa-solid fa-x"></i>
        </button>
    </div>
}



@* <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script> *@



<!-- Custom styles for this template-->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<link href="~/theme/css/custom-colors.css" rel="stylesheet">
<link href="~/customs/css/style.css" rel="stylesheet">
@* <link href="~/customs/css/members-table.css" rel="stylesheet"> *@
<link href="~/css/contactstyle.css" rel="stylesheet">









<div class="col-12">
    <div class="card">
        <div class="card-body">
            <div class="d-sm-flex align-items-center justify-content-between mb-4">
                <h1 class="mb-0 text-gray-1400">Members</h1>
                @if (User.IsInRole("Admin"))
                {
                    <a asp-action="Create" class="btn btn-primary btn-lg">
                        <i class="fas fa-plus"></i> Add Member
                    </a>
                }
            </div>
            <!-- Add this button near the top of your Member/Index.cshtml -->
            <button id="exportButton" class="btn btn-success">
                <i class="fas fa-file-excel"></i> Export to Excel
            </button>

            <form asp-action="Index" method="get">
                <div class="form-horizontal">
                    <button class="btn btn-outline-secondary @ViewData["Filtering"] mb-3" type="button"
                            id="filterToggle"
                            aria-expanded="false"
                            aria-controls="collapseFilter">
                        Filter/Search @ViewData["numberFilters"]
                    </button>


                    <div class="mb-4"></div> <!-- Added spacer div -->

                    <div class="collapse @ViewData["ShowFilter"]" id="collapseFilter">
                        <div class="card card-body bg-light">
                            <div class="row">
                                <!-- Filter by Member Name -->
                                <div class="form-group col-md-4">
                                    <label class="control-label">Filter by Member Name:</label>
                                    @Html.TextBox("SearchString", null, new { @class = "form-control", placeholder = "Enter name" })
                                </div>

                                <!-- Filter by City -->
                                <div class="form-group col-md-4">
                                    <label class="control-label">Filter by City:</label>
                                    @Html.DropDownList("AddressCity",
                                             new SelectList(ViewBag.AddressCityList, "Value", "Text"),
                                             "All Cities",
                                             new { @class = "form-control" })
                                </div><hr />

                                <!-- Filter by Contact -->
                                <div class="form-group col-md-4">
                                    <label class="control-label">Filter by Contact:</label>
                                    @Html.TextBox("Contact", null, new { @class = "form-control", placeholder = "Enter first name" })
                                </div>

                                @* <!-- Filter by Size -->
                                <div class="form-group col-md-4">
                                    <label class="control-label">Filter by Member Size:</label>
                                    @Html.TextBox("MemberSize", null, new { @class = "form-control", placeholder = "Enter size" })
                                </div> *@

                                <!-- Filter by Status -->
                                <div class="form-group col-md-4">
                                    <label class="control-label">Filter by Member Status:</label>
                                    @Html.DropDownList("MemberStatus",
                                             EnumHelper.GetEnumSelectList<CRMProject.Models.MemberStatus>(),
                                             new { @class = "form-control" })
                                </div>

                                <!-- Filter by Membership Type Name -->
                                <div class="form-group col-md-4">
                                    <label class="control-label">Filter by Membership Type:</label>
                                    @Html.DropDownList("MembershipTypeName",
                                             new SelectList(ViewBag.MembershipTypeNameList, "Value", "Text"),
                                             "All Types",
                                             new { @class = "form-control" })
                                </div><hr />

                                <!-- Filter by Join Date Range -->
                                <div class="form-group col-md-4">
                                    <label class="control-label">Filter by Join Date:</label>
                                    <div class="d-flex flex-wrap align-items-center">
                                        <div class="me-2 mb-2 flex-grow-1">
                                            <input type="date" name="StartDate" value="@ViewData["StartDate"]" class="form-control" placeholder="Start Date" />
                                        </div>
                                        <span class="mx-1 mb-2">to</span>
                                        <div class="ms-2 mb-2 flex-grow-1">
                                            <input type="date" name="EndDate" value="@ViewData["EndDate"]" class="form-control" placeholder="End Date" />
                                        </div>
                                    </div>
                                </div>


                                <!-- Filter Actions -->
                                <div class="form-group col-md-4 align-self-end">
                                    <input type="submit" name="actionButton"
                                           value="Filter @(ViewData["numberFilters"])"
                                           class="btn btn-outline-secondary @(string.IsNullOrEmpty(ViewData["numberFilters"]?.ToString()) ? "btn-outline-primary" : "btn-danger")" />
                                    <a asp-action="Index" class="btn btn-outline-primary">Clear</a>
                                </div>


                            </div>
                        </div>
                    </div>
                </div>

            </form>

            <div class="mb-3">
                @if (!string.IsNullOrEmpty(ViewData["numberFilters"]?.ToString()))
                {
                    <div class="card">
                        <div class="card-header bg-light">
                            <h5 class="mb-0">Active Filters</h5>
                        </div>
                        <div class="card-body bg-light">
                            <div class="row">
                                @if (!string.IsNullOrEmpty(Context.Request.Query["SearchString"]))
                                {
                                    <div class="col-auto mb-3 me-3">
                                        <span class="badge bg-primary text-white p-3 fs-4 fw-bold">
                                            Member Name: @Context.Request.Query["SearchString"]
                                            <a asp-action="Index" asp-route-AddressCity="@Context.Request.Query["AddressCity"]"
                                               asp-route-Contact="@Context.Request.Query["Contact"]"
                                               asp-route-MemberStatus="@Context.Request.Query["MemberStatus"]"
                                               asp-route-MembershipTypeName="@Context.Request.Query["MembershipTypeName"]"
                                               asp-route-StartDate="@Context.Request.Query["StartDate"]"
                                               asp-route-EndDate="@Context.Request.Query["EndDate"]"
                                               class="ms-2 text-white"><i class="fas fa-times-circle"></i></a>
                                        </span>
                                    </div>
                                }
                                @if (!string.IsNullOrEmpty(Context.Request.Query["AddressCity"]))
                                {
                                    <div class="col-auto mb-3 me-3">
                                        <span class="badge bg-primary text-white p-3 fs-4 fw-bold">
                                            City: @Context.Request.Query["AddressCity"]
                                            <a asp-action="Index" asp-route-SearchString="@Context.Request.Query["SearchString"]"
                                               asp-route-Contact="@Context.Request.Query["Contact"]"
                                               asp-route-MemberStatus="@Context.Request.Query["MemberStatus"]"
                                               asp-route-MembershipTypeName="@Context.Request.Query["MembershipTypeName"]"
                                               asp-route-StartDate="@Context.Request.Query["StartDate"]"
                                               asp-route-EndDate="@Context.Request.Query["EndDate"]"
                                               class="ms-2 text-white"><i class="fas fa-times-circle"></i></a>
                                        </span>
                                    </div>
                                }
                                @if (!string.IsNullOrEmpty(Context.Request.Query["Contact"]))
                                {
                                    <div class="col-auto mb-3 me-3">
                                        <span class="badge bg-primary text-white p-3 fs-4 fw-bold">
                                            Contact: @Context.Request.Query["Contact"]
                                            <a asp-action="Index" asp-route-SearchString="@Context.Request.Query["SearchString"]"
                                               asp-route-AddressCity="@Context.Request.Query["AddressCity"]"
                                               asp-route-MemberStatus="@Context.Request.Query["MemberStatus"]"
                                               asp-route-MembershipTypeName="@Context.Request.Query["MembershipTypeName"]"
                                               asp-route-StartDate="@Context.Request.Query["StartDate"]"
                                               asp-route-EndDate="@Context.Request.Query["EndDate"]"
                                               class="ms-2 text-white"><i class="fas fa-times-circle"></i></a>
                                        </span>
                                    </div>
                                }
                                @if (!string.IsNullOrEmpty(Context.Request.Query["MemberStatus"]))
                                {
                                    <div class="col-auto mb-3 me-3">
                                        <span class="badge bg-primary text-white p-3 fs-4 fw-bold">
                                            Status: @Context.Request.Query["MemberStatus"]
                                            <a asp-action="Index" asp-route-SearchString="@Context.Request.Query["SearchString"]"
                                               asp-route-AddressCity="@Context.Request.Query["AddressCity"]"
                                               asp-route-Contact="@Context.Request.Query["Contact"]"
                                               asp-route-MembershipTypeName="@Context.Request.Query["MembershipTypeName"]"
                                               asp-route-StartDate="@Context.Request.Query["StartDate"]"
                                               asp-route-EndDate="@Context.Request.Query["EndDate"]"
                                               class="ms-2 text-white"><i class="fas fa-times-circle"></i></a>
                                        </span>
                                    </div>
                                }
                                @if (!string.IsNullOrEmpty(Context.Request.Query["MembershipTypeName"]))
                                {
                                    <div class="col-auto mb-3 me-3">
                                        <span class="badge bg-primary text-white p-3 fs-4 fw-bold">
                                            Membership Type: @Context.Request.Query["MembershipTypeName"]
                                            <a asp-action="Index" asp-route-SearchString="@Context.Request.Query["SearchString"]"
                                               asp-route-AddressCity="@Context.Request.Query["AddressCity"]"
                                               asp-route-Contact="@Context.Request.Query["Contact"]"
                                               asp-route-MemberStatus="@Context.Request.Query["MemberStatus"]"
                                               asp-route-StartDate="@Context.Request.Query["StartDate"]"
                                               asp-route-EndDate="@Context.Request.Query["EndDate"]"
                                               class="ms-2 text-white"><i class="fas fa-times-circle"></i></a>
                                        </span>
                                    </div>
                                }
                                @if (!string.IsNullOrEmpty(Context.Request.Query["StartDate"]) && !string.IsNullOrEmpty(Context.Request.Query["EndDate"]))
                                {
                                    <div class="col-auto mb-3 me-3">
                                        <span class="badge bg-primary text-white p-3 fs-4 fw-bold">
                                            Join Date: @Context.Request.Query["StartDate"] to @Context.Request.Query["EndDate"]
                                            <a asp-action="Index" asp-route-SearchString="@Context.Request.Query["SearchString"]"
                                               asp-route-AddressCity="@Context.Request.Query["AddressCity"]"
                                               asp-route-Contact="@Context.Request.Query["Contact"]"
                                               asp-route-MemberStatus="@Context.Request.Query["MemberStatus"]"
                                               asp-route-MembershipTypeName="@Context.Request.Query["MembershipTypeName"]"
                                               class="ms-2 text-white"><i class="fas fa-times-circle"></i></a>
                                        </span>
                                    </div>
                                }
                            </div>
                            @*                             <div class="mt-4">
                                <a asp-action="Index" class="btn btn-danger fs-4 fw-bold px-4 py-2">Clear All Filters</a>
                            </div> *@
                        </div>
                    </div>
                }
            </div>

            @*    <!-- Export Button -->
            <button id="exportButton" class="btn btn-primary">Export to Excel</button>

            <!-- Include the partial view for the modal -->
            <partial name="ExportModal" /> *@

            <div class="card">
                <!-- Table Section -->
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="example1" class="table table-bordered table-striped ">
                            <thead class="table-light">
                                <tr>
                                    <th style="min-width: 120px;">@Html.DisplayNameFor(model => model.First().MemberName)</th>
                                    @* <th class="d-none d-sm-table-cell" style="min-width: 120px;">@Html.DisplayNameFor(model => model.First().MemberSize)</th> *@
                                    @* <th class="d-none d-sm-table-cell" style="min-width: 120px;">@Html.DisplayNameFor(model => model.First().MemberContacts)</th> *@
                                    <th style="min-width: 120px;">@Html.DisplayNameFor(model => model.First().Address.AddressCity)</th>
                                    @* <th style="min-width: 120px;">@Html.DisplayNameFor(model => model.First().MemberStatus)</th> *@
                                    <th style="min-width: 120px;">@Html.DisplayNameFor(model => model.First().MemberMembershipTypes)</th>
                                    <th style="min-width: 120px;">@Html.DisplayNameFor(model => model.First().MemberIndustries)</th>
                                    <th style="min-width: 120px;">@Html.DisplayNameFor(model => model.First().MemberStartDate)</th>
                                    <th style="width: 170px; text-align: center;">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (!Model.Any())
                                {
                                    <tr>
                                        <td colspan="7" class="text-center">No members available.</td>
                                    </tr>
                                }
                                else
                                {
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td style="min-width: 150px;">
                                                @item.MemberName
                                            </td>
                                            @* <td class="d-none d-sm-table-cell">
                                                @if (item.MemberContacts != null && item.MemberContacts.Any())
                                                {
                                                    var primaryContact = item.MemberContacts.FirstOrDefault();
                                                    if (primaryContact != null)
                                                    {
                                                        var contactSummary = primaryContact.Contact.Summary;
                                                        var words = contactSummary?.Split(' ');
                                                        var shortSummary = words?.Length > 3 ? string.Join(" ", words.Take(3)) : contactSummary;
                                                        var fullSummary = contactSummary;

                                                        <span>
                                                            @shortSummary
                                                            @if (words?.Length > 3)
                                                            {
                                                                <span id="moreTextContact@(item.ID) style="display: none;"> @fullSummary.Substring(shortSummary.Length) </span>
                                                                <a href="javascript:void(0);" id="readMoreContact@(item.ID)" onclick="toggleTextContact(@item.ID)">... </a>
                                                            }
                                                        </span>
                                                        var contactCount = item.MemberContacts.Count;
                                                        if (contactCount > 1)
                                                        {
                                                            string contactList = "";
                                                            var contacts = item.MemberContacts.Skip(1).ToList();
                                                            foreach (var contact in contacts)
                                                            {
                                                                contactList += contact.Contact.Summary + "<br />";
                                                            }

                                                            // Create the collapsible link and content for additional contacts
                                                            <a data-bs-toggle="collapse" href="#collapseContact@(item.ID)" aria-expanded="false" aria-controls="collapseContact@(item.ID)">
                                                                <span class="badge bg-info">@contactCount</span>
                                                            </a>
                                                            <div class="collapse" id="collapseContact@(item.ID)">
                                                                @Html.Raw(contactList)
                                                            </div>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <span>No contact information available</span>
                                                    }
                                                }                                                
                                            </td> *@

                                            <td style="min-width: 150px;">
                                                @if (item.Address != null && !string.IsNullOrEmpty(item.Address.AddressCity))
                                                {
                                                    @item.Address.AddressCity
                                                    @* var cityName = item.Address.AddressCity;
                                                    var words = cityName.Split(' ');
                                                    var shortName = words.Length > 3 ? string.Join(" ", words.Take(3)) : cityName;
                                                    var fullName = cityName;

                                                    <span>
                                                        @shortName
                                                        @if (words.Length > 3)
                                                        {
                                                            <span id="moreTextName@(item.ID)" style="display: none;"> @fullName.Substring(shortName.Length) </span>
                                                            <a href="javascript:void(0);" id="readMoreCity@(item.ID)" onclick="toggleTextCity(@item.ID)">...Read More </a>
                                                        }
                                                    </span> *@
                                                }
                                                else
                                                {

                                                    <span>N/A</span>

                                                }
                                            </td>

                                            @* <td style="min-width: 150px;">
                                                @Html.DisplayFor(modelItem => item.MemberStatus)
                                            </td> *@
                                            <!-- For Memberships cell -->
                                            <td style="min-width: 150px;">
                                                @if (item.MemberMembershipTypes != null && item.MemberMembershipTypes.Any())
                                                {
                                                    var membershipList = item.MemberMembershipTypes.Select(m => m.MembershipType.MembershipTypeName).ToList();
                                                    var membershipCount = membershipList.Count;
                                                    var collapseId = $"collapseMembership{item.ID}";
                                                    var fullMembershipNames = string.Join(", ", membershipList);

                                                    <span class="export-membership-data" style="display:none;">@fullMembershipNames</span>

                                                    <span>

                                                        <a href="javascript:void(0);" class="role-button"
                                                           data-bs-target="#@collapseId">

                                                            Memberships (@membershipCount)
                                                            <i class="bi bi-chevron-down" id="arrowMembership@(item.ID)"></i>
                                                        </a>
                                                        <div class="collapse mt-2" id="@collapseId">
                                                            <ul class="list-unstyled">
                                                                @foreach (var membership in membershipList)
                                                                {
                                                                    <li>@membership</li>
                                                                }
                                                            </ul>
                                                        </div>
                                                    </span>
                                                }
                                            </td>

                                            <!-- For Industries cell -->
                                            <td style="min-width: 150px;">
                                                @if (item.MemberIndustries != null && item.MemberIndustries.Any())
                                                {
                                                    var industries = item.MemberIndustries.Select(m => m.Industry.IndustrySector).ToList();
                                                    var industryCount = industries.Count;
                                                    var collapseId = $"collapseIndustry{item.ID}";
                                                    var fullIndustryNames = string.Join(", ", industries);

                                                    <span class="export-industry-data" style="display:none;">@fullIndustryNames</span>

                                                    <span>

                                                        <a href="javascript:void(0);" class="role-button"
                                                           data-bs-target="#@collapseId">

                                                            Industries (@industryCount)
                                                            <i class="bi bi-chevron-down" id="arrowIndustry@(item.ID)"></i>
                                                        </a>
                                                        <div class="collapse mt-2" id="@collapseId">
                                                            <ul class="list-unstyled">
                                                                @foreach (var industry in industries)
                                                                {
                                                                    <li>@industry</li>
                                                                }
                                                            </ul>
                                                        </div>
                                                    </span>
                                                }
                                            </td>


                                            <td style="min-width: 150px;">@Html.DisplayFor(modelItem => item.MemberStartDate)</td>
                                            <td style="text-align: center;">
                                                <div class="btn-group" style="align-content: center;">
                                                    @if (@item.MemberStatus == MemberStatus.Cancelled)
                                                    {
                                                    }
                                                    else
                                                    {
                                                        @if (User.IsInRole("Admin"))
                                                        {
                                                            <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-md btn-outline-primary" role="button" aria-disabled="false"
                                                               data-bs-toggle="tooltip" title="Edit @ViewData["ControllerFriendlyName"]">
                                                                <i class="bi bi-pencil-square"></i>
                                                            </a>
                                                        }
                                                    }
                                                    <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-md btn-outline-primary"
                                                       role="button" data-bs-toggle="tooltip" title="Details @ViewData["ControllerFriendlyName"]">
                                                        <i class="bi bi-search"></i>
                                                    </a>
                                                    @if (@item.MemberStatus != MemberStatus.Cancelled)
                                                    {
                                                        @if (User.IsInRole("Admin"))
                                                        {
                                                            <form asp-action="Cancel" method="get" class="d-inline">
                                                                <input type="hidden" name="id" value="@item.ID" />
                                                                <button type="submit" class="btn btn-md btn-outline-primary" data-bs-toggle="tooltip" title="Cancel">
                                                                    <i class="fa-solid fa-user-slash"></i>
                                                                </button>

                                                            </form>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        @if (User.IsInRole("Admin"))
                                                        {
                                                            <form asp-action="Activate" method="get" class="d-inline">
                                                                <input type="hidden" name="id" value="@item.ID" />
                                                                <button type="submit" class="btn btn-md btn-outline-primary" data-bs-toggle="tooltip" title="Activate">
                                                                    <i>&#x271A;</i>
                                                                </button>
                                                            </form>
                                                        }
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <form asp-action="Index" method="get">
                <partial name="_PagingNavBar" />
            </form>

            <br />
            <div class="card mb-3" style="min-width: 18rem;">
                <h2 class="card-header" id="IndustryUpload" style="font-size: 1.5rem;">Upload Members</h2>
                <div class="card-body">
                    <div class="text-danger">@Html.Raw(TempData["Feedback"])</div>
                    <form asp-action="InsertFromExcel" asp-controller="Member" method="post" enctype="multipart/form-data">
                        <div class="row">
                            <div class="col-md-1"></div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label class="control-label">Upload Excel File:</label>
                                    <div class="input-group mb-3">
                                        <input type="file" class="form-control" name="theExcel" id="fileUpload" accept=".xls,.xlsx">
                                        @* <button type="button" class="btn btn-outline-secondary" onclick="checkFile()">Check File</button> *@
                                    </div>
                                </div>
                                <div class="form-group">
                                    <input type="submit" value="Upload Data" class="btn btn-primary" />
                                </div>
                            </div>
                            <div class="col-md-7">
                                <p>
                                    Ensure that your Excel file follows the required format:<br />
                                    - Place all data in the first column.<br />
                                    - Start data from the second row, leaving room for the heading "Member Name" in the first row.<br />
                                    - The system verifies the column heading to ensure correctness.
                                </p>
                                <div class="mt-3">
                                    <h3 style="font-size: 1rem;">Download Example Files:</h3>
                                    <ul>
                                        <li>
                                            <a href="@Url.Content("~/files/Member_Upload_Example.xlsx")" download>
                                                <i class="fa-solid fa-file-excel"></i> Download Member Upload Template
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

        </div>
    </div>
</div>

<!-- Export Dialog - Replace your existing dialog HTML with this -->
<!-- Export Dialog -->
<div id="exportDialog" class="custom-dialog-overlay" style="display: none;">
    <div class="custom-dialog" role="dialog" aria-labelledby="dialogTitle">
        <div class="dialog-header">
            <h2 id="dialogTitle" class="dialog-title" style="font-size: 1.25rem;">Export Members to Excel</h2>
            <button type="button" class="dialog-close" aria-label="Close">&times;</button>
        </div>
        <div class="dialog-body">
            <form id="exportForm">
                <div class="alert alert-info mb-3">
                    <small>Current filters will be applied to the exported data.</small>
                </div>

                <h3 class="mb-3" style="font-size: 1rem;">Select Fields to Export</h3>


                <!-- Member Information -->
                <div class="card mb-2">
                    <div class="card-header">
                        <div class="form-check">
                            <input class="form-check-input section-checkbox" type="checkbox" id="memberSection" checked>
                            <label class="form-check-label fw-bold" for="memberSection">Member Information</label>
                        </div>
                    </div>
                    <div class="card-body" id="memberFields">
                        <div class="form-check">
                            <input class="form-check-input field-checkbox member-field" type="checkbox" name="selectedFields" value="Member.Name" id="memberName" checked>
                            <label class="form-check-label" for="memberName">Name</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input field-checkbox member-field" type="checkbox" name="selectedFields" value="Member.Size" id="memberSize" checked>
                            <label class="form-check-label" for="memberSize">Size</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input field-checkbox member-field" type="checkbox" name="selectedFields" value="Member.Status" id="memberStatus" checked>
                            <label class="form-check-label" for="memberStatus">Status</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input field-checkbox member-field" type="checkbox" name="selectedFields" value="Member.AccountsPayableEmail" id="memberAPEmail" checked>
                            <label class="form-check-label" for="memberAPEmail">A/P Email</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input field-checkbox member-field" type="checkbox" name="selectedFields" value="Member.Website" id="memberWebsite" checked>
                            <label class="form-check-label" for="memberWebsite">Website</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input field-checkbox member-field" type="checkbox" name="selectedFields" value="Member.StartDate" id="memberStartDate" checked>
                            <label class="form-check-label" for="memberStartDate">Join Date</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input field-checkbox member-field" type="checkbox" name="selectedFields" value="Member.EndDate" id="memberEndDate" checked>
                            <label class="form-check-label" for="memberEndDate">End Date</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input field-checkbox member-field" type="checkbox" name="selectedFields" value="Member.LastContactDate" id="memberLastContactDate" checked>
                            <label class="form-check-label" for="memberLastContactDate">Last Contacted</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input field-checkbox member-field" type="checkbox" name="selectedFields" value="Member.Notes" id="memberNotes" checked>
                            <label class="form-check-label" for="memberNotes">Notes</label>
                        </div>
                    </div>
                </div>

                <!-- Contact Information -->
                <div class="card mb-2">
                    <div class="card-header">
                        <div class="form-check">
                            <input class="form-check-input section-checkbox" type="checkbox" id="contactSection" checked>
                            <label class="form-check-label fw-bold" for="contactSection">Contact Information <small class="text-muted">(VIP contacts prioritized)</small></label>
                        </div>
                    </div>
                    <div class="card-body" id="contactFields">
                        <div class="form-check">
                            <input class="form-check-input field-checkbox contact-field" type="checkbox" name="selectedFields" value="Contact.FirstName" id="contactFirstName" checked>
                            <label class="form-check-label" for="contactFirstName">First Name</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input field-checkbox contact-field" type="checkbox" name="selectedFields" value="Contact.LastName" id="contactLastName" checked>
                            <label class="form-check-label" for="contactLastName">Last Name</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input field-checkbox contact-field" type="checkbox" name="selectedFields" value="Contact.MiddleName" id="contactMiddleName" checked>
                            <label class="form-check-label" for="contactMiddleName">Middle Name</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input field-checkbox contact-field" type="checkbox" name="selectedFields" value="Contact.Email" id="contactEmail" checked>
                            <label class="form-check-label" for="contactEmail">Email</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input field-checkbox contact-field" type="checkbox" name="selectedFields" value="Contact.Phone" id="contactPhone" checked>
                            <label class="form-check-label" for="contactPhone">Phone</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input field-checkbox contact-field" type="checkbox" name="selectedFields" value="Contact.TitleRole" id="contactTitleRole" checked>
                            <label class="form-check-label" for="contactTitleRole">Title/Role</label>
                        </div>
                    </div>
                </div>

                <!-- Membership Information -->
                <div class="card mb-2">
                    <div class="card-header">
                        <div class="form-check">
                            <input class="form-check-input section-checkbox" type="checkbox" id="membershipSection" checked>
                            <label class="form-check-label fw-bold" for="membershipSection">Membership Information</label>
                        </div>
                    </div>
                    <div class="card-body" id="membershipFields">
                        <div class="form-check">
                            <input class="form-check-input field-checkbox membership-field" type="checkbox" name="selectedFields" value="MembershipType.Name" id="membershipTypeName" checked>
                            <label class="form-check-label" for="membershipTypeName">Membership Type</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input field-checkbox membership-field" type="checkbox" name="selectedFields" value="MembershipType.Fee" id="membershipTypeFee" checked>
                            <label class="form-check-label" for="membershipTypeFee">Fee</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input field-checkbox membership-field" type="checkbox" name="selectedFields" value="MembershipType.Benefits" id="membershipTypeBenefits" checked>
                            <label class="form-check-label" for="membershipTypeBenefits">Benefits</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input field-checkbox membership-field" type="checkbox" name="selectedFields" value="MembershipType.Description" id="membershipTypeDescription" checked>
                            <label class="form-check-label" for="membershipTypeDescription">Description</label>
                        </div>
                    </div>
                </div>

                <!-- Industry Information -->
                <div class="card mb-2">
                    <div class="card-header">
                        <div class="form-check">
                            <input class="form-check-input section-checkbox" type="checkbox" id="industrySection" checked>
                            <label class="form-check-label fw-bold" for="industrySection">Industry Information</label>
                        </div>
                    </div>
                    <div class="card-body" id="industryFields">
                        <div class="form-check">
                            <input class="form-check-input field-checkbox industry-field" type="checkbox" name="selectedFields" value="Industry.Sector" id="industrySector" checked>
                            <label class="form-check-label" for="industrySector">Industry Sector</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input field-checkbox industry-field" type="checkbox" name="selectedFields" value="Industry.Subsector" id="industrySubsector" checked>
                            <label class="form-check-label" for="industrySubsector">Industry Subsector</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input field-checkbox industry-field" type="checkbox" name="selectedFields" value="Industry.NAICSCode" id="industryNAICSCode" checked>
                            <label class="form-check-label" for="industryNAICSCode">NAICS Code</label>
                        </div>
                    </div>
                </div>

                <!-- Address Information -->
                <div class="card mb-2">
                    <div class="card-header">
                        <div class="form-check">
                            <input class="form-check-input section-checkbox" type="checkbox" id="addressSection" checked>
                            <label class="form-check-label fw-bold" for="addressSection">Address Information</label>
                        </div>
                    </div>
                    <div class="card-body" id="addressFields">
                        <div class="form-check">
                            <input class="form-check-input field-checkbox address-field" type="checkbox" name="selectedFields" value="Address.Line1" id="addressLine1" checked>
                            <label class="form-check-label" for="addressLine1">Address Line 1</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input field-checkbox address-field" type="checkbox" name="selectedFields" value="Address.Line2" id="addressLine2" checked>
                            <label class="form-check-label" for="addressLine2">Address Line 2</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input field-checkbox address-field" type="checkbox" name="selectedFields" value="Address.City" id="addressCity" checked>
                            <label class="form-check-label" for="addressCity">City</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input field-checkbox address-field" type="checkbox" name="selectedFields" value="Address.Province" id="addressProvince" checked>
                            <label class="form-check-label" for="addressProvince">Province</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input field-checkbox address-field" type="checkbox" name="selectedFields" value="Address.PostalCode" id="addressPostalCode" checked>
                            <label class="form-check-label" for="addressPostalCode">Postal Code</label>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <div class="dialog-footer">
            <button type="button" class="btn btn-secondary dialog-close">Cancel</button>
            <button type="button" class="btn btn-primary" id="exportSubmit">Export</button>
        </div>
    </div>
</div>








<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
@section Scripts {

    <script src="~/js/site.js"></script>


    <script>
        $(document).ready(function () {
            // Show export dialog when export button is clicked
            $('#exportButton').on('click', function () {
                // Initialize section checkboxes
                $('.section-checkbox').each(function () {
                    const isChecked = $(this).prop('checked');
                    const sectionId = $(this).attr('id');
                    const fieldClass = sectionId.replace('Section', '-field');

                    $(`.${fieldClass}`).prop('disabled', !isChecked);
                });

                $('#exportDialog').fadeIn(300);
            });

            // Close dialog when close button or cancel is clicked
            $('.dialog-close').on('click', function () {
                $('#exportDialog').fadeOut(300);
            });

            // Close dialog when clicking outside
            $('#exportDialog').on('click', function (e) {
                if ($(e.target).is('#exportDialog')) {
                    $('#exportDialog').fadeOut(300);
                }
            });

            // Handle section checkboxes
            $('.section-checkbox').on('change', function () {
                const isChecked = $(this).prop('checked');
                const sectionId = $(this).attr('id');
                const fieldClass = sectionId.replace('Section', '-field');

                // Enable/disable fields in this section
                $(`.${fieldClass}`).prop('disabled', !isChecked);

                // If section is unchecked, uncheck all fields in this section
                if (!isChecked) {
                    $(`.${fieldClass}`).prop('checked', false);
                } else {
                    // If section is checked but no fields are selected, check all fields
                    if ($(`.${fieldClass}:checked`).length === 0) {
                        $(`.${fieldClass}`).prop('checked', true);
                    }
                }
            });

            // Handle export
            $('#exportSubmit').on('click', function () {
                // Validate that at least one field is selected
                if ($('.field-checkbox:checked').length === 0) {
                    alert('Please select at least one field to export.');
                    return;
                }

                // Get current URL parameters to maintain filters
                const urlParams = new URLSearchParams(window.location.search);

                // Create form data
                const formData = new FormData();

                // Add selected fields
                $('.field-checkbox:checked').each(function () {
                    formData.append('selectedFields', $(this).val());
                });
                // Add filter parameters from URL
                if (urlParams.has('SearchString')) {
                    formData.append('SearchString', urlParams.get('SearchString'));
                }

                if (urlParams.has('AddressCity')) {
                    formData.append('AddressCity', urlParams.get('AddressCity'));
                }

                if (urlParams.has('Contact')) {
                    formData.append('Contact', urlParams.get('Contact'));
                }

                if (urlParams.has('MemberSize')) {
                    formData.append('MemberSize', urlParams.get('MemberSize'));
                }

                if (urlParams.has('MemberStatus')) {
                    formData.append('MemberStatus', urlParams.get('MemberStatus'));
                }

                if (urlParams.has('MembershipTypeName')) {
                    formData.append('MembershipTypeName', urlParams.get('MembershipTypeName'));
                }

                if (urlParams.has('IndustryName')) {
                    formData.append('IndustryName', urlParams.get('IndustryName'));
                }

                // Show loading indicator
                const submitBtn = $('#exportSubmit');
                const originalText = submitBtn.text();
                submitBtn.prop('disabled', true).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Exporting...');

                // Create a temporary form to submit the data
                const tempForm = document.createElement('form');
                tempForm.method = 'POST';
                tempForm.action = '/Export/ExportMembers';
                tempForm.style.display = 'none';

                // Convert FormData to hidden inputs
                for (const [key, value] of formData.entries()) {
                    const input = document.createElement('input');
                    input.type = 'hidden';
                    input.name = key;
                    input.value = value;
                    tempForm.appendChild(input);
                }

                // Add form to document and submit
                document.body.appendChild(tempForm);
                tempForm.submit();

                // Reset button after a delay
                setTimeout(function () {
                    submitBtn.prop('disabled', false).text(originalText);
                    $('#exportDialog').fadeOut(300);
                }, 1000);
            });

            // Handle keyboard events
            $(document).on('keydown', function (e) {
                // Close on Escape key
                if (e.key === 'Escape' && $('#exportDialog').is(':visible')) {
                    $('#exportDialog').fadeOut(300);
                }
            });
        });




    </script>


}









@* <script> *@
@*        document.addEventListener('DOMContentLoaded', function () { *@
@*         // Handle filter toggle button *@
@*         const filterToggle = document.getElementById('filterToggle'); *@
@*         const collapseFilter = document.getElementById('collapseFilter'); *@

@*         filterToggle.addEventListener('click', function() { *@
@*             const isExpanded = filterToggle.getAttribute('aria-expanded') === 'true'; *@
@*             filterToggle.setAttribute('aria-expanded', !isExpanded); *@

@*             if (isExpanded) { *@
@*                 collapseFilter.classList.remove('show'); *@
@*             } else { *@
@*                 collapseFilter.classList.add('show'); *@
@*             } *@
@*         }); *@

@*         // Existing collapse handlers for specialty badges *@
@*         document.querySelectorAll('[data-bs-toggle="collapse"]').forEach(function (element) { *@
@*             var collapseId = element.getAttribute('href').replace('#', ''); *@
@*             var collapseElement = document.getElementById(collapseId); *@
@*             var badgeElement = document.getElementById('badge' + collapseId.replace('collapseSpecialty', '')); *@

@*             if (collapseElement && badgeElement) { *@
@*                 collapseElement.addEventListener('show.bs.collapse', function () { *@
@*                     badgeElement.style.display = 'none'; *@
@*                 }); *@
