@using Microsoft.IdentityModel.Tokens
@model CRMProject.Models.Member

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Details - " + Model?.MemberName;
}

<!-- Display Success or Error Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData.ContainsKey("ErrorMessage"))
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}

<div class="col-12">
    <div class="card">
        <div class="card-body">
            
                <h2>Details - @Html.DisplayFor(model => model.MemberName)</h2>
                <hr />


            <!-- Two-Column Layout -->
            <dl class="row">
                <div class="col-xl-3">
                    <!-- Member Image -->
                    <!-- Member Image -->
                    @if (Model?.MemberPhoto?.Content != null && Model?.MemberPhoto?.MimeType != null)
                    {
                        string imageBase64 = Convert.ToBase64String(Model.MemberPhoto.Content);
                        string imageSrc = string.Format("data:{0};base64,{1}", Model.MemberPhoto.MimeType, imageBase64);
                        <img src="@imageSrc" alt="Profile Picture" class="img-fluid rounded" style="max-height: 300px; width: auto;" />
                    }
                    else
                    {
                        <img src="~/image/blankProfile.jpg" alt="Default Profile" class="img-fluid rounded" style="max-height: 300px; width: auto;" />
                    }

                   
                </div>


                <div class="col-xl-3">
                    <div class="row">
                        <dt class="col-5">@Html.DisplayNameFor(model => model.MemberSize)</dt>
                        <dd class="col-7">
                            @if(Model.MemberSize == null)
                            {
                                <span>N/A</span>
                            }
                            @Html.DisplayFor(model => model.MemberSize)</dd>

                        <dt class="col-5">@Html.DisplayNameFor(model => model.MemberStatus)</dt>
                        <dd class="col-7">@Html.DisplayFor(model => model.MemberStatus)</dd>

                        <dt class="col-5">@Html.DisplayNameFor(model => model.MemberAccountsPayableEmail)</dt>
                        <dd class="col-7">@Html.DisplayFor(model => model.MemberAccountsPayableEmail)</dd>
                    </div>
                </div>

                <div class="col-xl-3">
                    <div class="row">
                        <dt class="col-5">@Html.DisplayNameFor(model => model.MemberStartDate)</dt>
                        <dd class="col-7">@Html.DisplayFor(model => model.MemberStartDate, "{0:yyyy-MM-dd}")</dd>

                        <dt class="col-5">@Html.DisplayNameFor(model => model.MemberLastContactDate)</dt>
                        <dd class="col-7">@Html.DisplayFor(model => model.MemberLastContactDate, "{0:yyyy-MM-dd}")</dd>

                        <dt class="col-5">@Html.DisplayNameFor(model => model.MemberEndDate)</dt>
                        <dd class="col-7">@Html.DisplayFor(model => model.MemberEndDate, "{0:yyyy-MM-dd}")</dd>
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="row">
                        <dt class="col-5">Primary Contact</dt>
                        <dd class="col-7">
                            @if (Model.MemberContacts != null && Model.MemberContacts.Any())
                            {
                                var primaryContact = Model.MemberContacts.FirstOrDefault();
                                if (primaryContact != null)
                                {
                                    <span>@primaryContact.Contact.Summary</span>
                                }
                            }
                            else
                            {
                                <span>No contacts available</span>
                            }
                        </dd>

                        <dt class="col-5">Industry</dt>
                        <dd class="col-7">
                            @if (Model.MemberIndustries != null && Model.MemberIndustries.Any())
                            {
                                var primaryIndustry = Model.MemberIndustries.FirstOrDefault();
                                if (primaryIndustry != null)
                                {
                                    var words = primaryIndustry.Industry.Summary?.Split(' ');
                                    var shortSummary = words?.Length > 3 ? string.Join(" ", words.Take(3)) : primaryIndustry.Industry.Summary;
                                    var fullSummary = primaryIndustry.Industry.Summary;

                                    <span>
                                        @shortSummary
                                        @if (words?.Length > 3)
                                        {
                                            <span id="moreText" style="display: none;"> @fullSummary.Substring(shortSummary.Length) </span>
                                            <a href="javascript:void(0);" id="readMore" onclick="toggleText()">... </a>
                                        }
                                    </span>
                                }
                            }
                            else
                            {
                                <span>No industry information available</span>
                            }
                        </dd>

                        <dt class="col-5">City</dt>
                        <dd class="col-7">
                           

                            @if (Model.Address != null)
                            {
                                <span>@Model.Address.AddressCity</span>
                                @* @if (!string.IsNullOrEmpty(Model.Address.PostalCode))
                                {
                                    <span>- @Model.Address.PostalCode</span>
                                } *@
                            }
                            else
                            {
                                <span>No address available</span>
                            }
                        </dd>
                    </div>
                </div>





            

            </dl>
            <dt class="col-md-12">@Html.DisplayNameFor(model => model.MemberNotes)</dt>
            <dd class="col-sm-12">
                <textarea class="form-control" readonly>@Model.MemberNotes</textarea>
            </dd>
        </div>
    </div>

    <div class="row-md-4">
        @await Html.PartialAsync("_ListOfContacts", Model.MemberContacts)
    </div>


    <div class="row-md-4 mt-5">
        <!-- Added margin-top -->
        @await Html.PartialAsync("_ListOfAddress", Model.Address != null ? new List<Address> { Model.Address } : new List<Address>())
    </div>

    <div class="row-md-4 mt-5">
        <!-- Added margin-top -->
        @Html.Partial("_IndustryInfo", Model.MemberIndustries)
    </div>

    <div class="row-md-4 mt-4">
        <!-- Ensures consistent spacing -->
        @Html.Partial("_MembershipTypeInfo", Model.MemberMembershipTypes)
    </div>


    @* <div class="row-md-4"> *@
    @*     @Html.Partial("_ListOfContacts", Model.MemberContacts) *@
    @*     @await Html.PartialAsync("_ListOfAddress", Model.Address != null ? new List<Address> { Model.Address } : new List<Address>()) *@
    @* </div> *@
    @* @* <div class="mt-4"> *@ 
    @* @*     @await Html.PartialAsync("_ListOfAddress", Model.Address != null ? new List<Address> { Model.Address } : new List<Address>()) *@ 
    @* @* </div> *@ 
    @* <div class="row-md-4"> *@
    @*     @Html.Partial("_IndustryInfo", Model.MemberIndustries) *@
    @*     @Html.Partial("_MembershipTypeInfo", Model.MemberMembershipTypes) *@
    @* </div> *@
   
    @* <div class="mt-4"> *@
    @*     @Html.Partial("_MembershipTypeInfo", Model.MemberMembershipTypes) *@
    @* </div> *@

    <div class="form-group text-center">
        @if (Model?.ID != null)
        {
            <a class="btn btn-warning" asp-action="Edit" asp-route-id="@Model.ID">Edit Member</a>
        }
        <a class="btn btn-secondary ml-2" asp-action="Index">Back to Members</a>
    </div>
</div>

<script>
    function toggleText() {
        var moreText = document.getElementById("moreText");
        var readMore = document.getElementById("readMore");

        if (moreText.style.display === "none") {
            moreText.style.display = "inline";
            readMore.innerHTML = " Read less";
        } else {
            moreText.style.display = "none";
            readMore.innerHTML = "... ";
        }
    }
</script>