@model IEnumerable<CRMProject.Models.Contact>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Contacts";
}

<!-- Display Success or Error Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}


<!-- Custom styles for this template-->
<link href="~/customs/css/style.css" rel="stylesheet">

<div class="col-12">
    <div class="card">
        <div class="card-body">

            <div class="d-sm-flex align-items-center justify-content-between mb-4">
                <h2 class="h2 mb-0 text-gray-1400">Contacts</h2>
                <a asp-action="Create" class="btn btn-primary btn-lg ">
                    <i class="fas fa-plus"></i>Add Contact
                </a>
            </div>

            <form asp-action="Index" method="get">
                <div class="form-horizontal">
                    <button class="btn btn-outline-primary  @ViewData["Filtering"]" type="button" data-bs-toggle="collapse" id="filterToggle"
                            data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
                        Filter/Search @ViewData["numberFilters"]
                    </button><br />
                    <div class="collapse @ViewData["ShowFilter"]" id="collapseFilter">
                        <div class="card card-body bg-light">
                            <div class="row">
                                <!-- Filter by First Name -->
                                <div class="form-group col-md-4">
                                    <label class="control-label">Filter by First Name:</label>
                                    @Html.TextBox("FirstName", null, new { @class = "form-control", placeholder = "Enter first name" })
                                </div>

                                <!-- Filter by Last Name -->
                                <div class="form-group col-md-4">
                                    <label class="control-label">Filter by Last Name:</label>
                                    @Html.TextBox("LastName", null, new { @class = "form-control", placeholder = "Enter last name" })
                                </div>

                                <!-- Filter by Phone -->
                                <div class="form-group col-md-4">
                                    <label class="control-label">Filter by Phone:</label>
                                    @Html.TextBox("ContactPhone", null, new { @class = "form-control", placeholder = "Enter phone number" })
                                </div>

                                <!-- Filter by Title/Role -->
                                <div class="form-group col-md-4">
                                    <label class="control-label">Filter by Title/Role:</label>
                                    @Html.TextBox("ContactTitleRole", null, new { @class = "form-control", placeholder = "Enter title or role" })
                                </div>

                                <!-- Filter Actions -->
                                <div class="form-group col-md-4 align-self-end">
                                    <button type="submit" name="actionButton"
                                            class="btn btn-outline-primary @(string.IsNullOrEmpty(ViewData["numberFilters"]?.ToString()) ? "btn-outline-primary" : "btn-danger")">
                                        Filter @ViewData["numberFilters"]
                                    </button>
                                    <a asp-action="Index" class="btn btn-outline-primary">Clear</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>


            <div class="card">
                <!-- /.card-header -->
                <div class="card-body">
                    <table id="example1" class="table table-bordered table-striped">
                        <thead class="table-light">
                            <tr>
                                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().MemberContacts)</th>
                                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Summary)</th>
                                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().ContactTitleRole)</th>
                                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().PhoneFormatted)</th>
                                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().ContactEmailAddress)</th>
                                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().ContactWebsite)</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (!Model.Any())
                            {
                                <tr>
                                    <td colspan="8" class="text-center">No contacts available.</td>
                                </tr>
                            }
                            else
                            {
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @{
                                                int specCount = item.MemberContacts.Count;
                                                if (specCount > 0)
                                                {
                                                    string firstSpec = item.MemberContacts.FirstOrDefault().Member.MemberName;
                                                    if (specCount > 1)
                                                    {
                                                        string specList = "";//Html string of specialty names separated by <br /> tags
                                                        var s = item.MemberContacts.ToList();
                                                        for (int i = 1; i < specCount; i++)//Skip the first because we have it already
                                                        {
                                                            specList += s[i].Member.MemberName + " <br />";
                                                        }
                                                        <a class="" role="button" data-bs-toggle="collapse" href="#collapseSpecalty@(item.ID)"
                                                           aria-expanded="false" aria-controls="collapseSpecalty@(item.ID)">
                                                            @firstSpec <span class="badge bg-info">@specCount</span>
                                                        </a>
                                                        <div class="collapse" id="collapseSpecalty@(item.ID)">
                                                            @Html.Raw(specList)
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        @firstSpec
                                                    }
                                                }
                                            }
                                        </td>
                                        <td>@Html.DisplayFor(modelItem => item.Summary)</td>
                                        <td>@Html.DisplayFor(modelItem => item.ContactTitleRole)</td>
                                        <td style="white-space: nowrap;">
                                            @if (!string.IsNullOrEmpty(item.PhoneFormatted) && item.PhoneFormatted.Length >= 10)
                                            {
                                                <a href="@item.PhoneFormatted" target="_blank">@item.PhoneFormatted</a>
                                            }
                                            else
                                            {
                                                <span>N/A</span>
                                            }
                                        </td>

                                        <td>
                                            @if (!string.IsNullOrEmpty(item.ContactEmailAddress))
                                            {
                                                <a href="@item.ContactEmailAddress" target="_blank">@item.ContactEmailAddress</a>
                                            }
                                            else
                                            {
                                                <span>N/A</span>
                                            }
                                        </td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(item.ContactWebsite))
                                            {
                                                <a href="@item.ContactWebsite" target="_blank">@item.ContactWebsite</a>
                                            }
                                            else
                                            {
                                                <span>N/A</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="btn-group" style="float: none; padding-left: 13%;">
                                                <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-md btn-outline-primary " role="button" aria-disabled="false"
                                                   data-bs-toggle="tooltip" title="Edit @ViewData["ControllerFriendlyName"]">
                                                    <i class="bi bi-pencil-square"></i>
                                                </a>

                                                <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-md btn-outline-primary"
                                                   role="button" data-bs-toggle="tooltip" title="Details @ViewData["ControllerFriendlyName"]">
                                                    <i class="bi bi-search"></i>
                                                </a>

                                                <a asp-action="Delete" asp-route-id="@item.ID" class="btn btn-md btn-outline-primary " role="button" aria-disabled="false"
                                                   data-bs-toggle="tooltip" title="Delete @ViewData["ControllerFriendlyName"]">
                                                    <i class="bi bi-archive-fill"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


